The Dissecting Power of Regular Languages
Tomoyuki Yamakami and Yuichi Kato
Abstract A recent study on structural properties of regular and context-free languages has
greatly promoted our basic understandings of the complex behaviors of those languages We
continue the study to examine how regular languages behave when they need to cut numerous
innite languages A particular interest rests on a situation in which a regular language needs to
dissect a given innite language into two subsets of innite size Every context-free language is
dissected by carefully chosen regular languages or it is REG-dissectible In a larger picture we
show that constantly-growing languages and semi-linear languages are REG-dissectible Under
certain natural conditions complements and nite intersections of semi-linear languages also
become REG-dissectible Restricted to bounded languages the intersections of nitely many
context-free languages and more surprisingly the entire Boolean hierarchy over bounded context-
free languages are REG-dissectible As an immediate application of the REG-dissectibility we
show another structural property in which an appropriate bounded context-free language can
separate with innite margins two given nested innite bounded context-free languages
keywords
bounded language semi-linear constantly growing dissectible i-separate
theory of computing formal languages regular language context-free language
1 Background Knowledge and the Results Overview
The exquisitely complex behaviors of formal languages are often dictated by multiple-layers of inner struc-
tures of the languages and a mathematical theory over those languages has been developed in the past
six decades alongside the discovery of some of the hidden structures
In an early stage of the study of
context-free languages for instance a notion of semi-linearitya structural property on the frequency of
occurrences of symbolswas found in 8 and a pumping lemmaanother property regarding the growth
rate of stringswas proven in 1 Similarly underlying structures of regular languages have been analyzed
within a number of dierent frameworks including the Myhill-Nerode theorem monadic second-order logic
and nitely generated monoids Recently new realms of structural properties of languages have been stud-
ied by obvious analogy with structural complexity issues of polynomial time-bounded complexity classes
Such properties include primeimmunity as well as pseudorandomness against the regular and context-free
languages introduced in 11 and a notion of minimal cover which was applied to the regular languages in
3 In the literature numerous key questions concerning the behaviors of languages have been raised but
left unsolved We suspect that the diculty in answering those questions may be rooted in yet-unknown
structures that constitute the languages
To promote our understandings of formal languages in general it may be desirable to unearth the hidden
structural properties of the languages In this line of study this paper aims at exploring another structural
property which is seemingly innocent but possibly fundamental concerning the ability to partition a target
innite set into two portions of innite size This simple property which we name dissectibility seems
more suitable for weak computations because as shown in Section 3 polynomial-time decidable languages
for instance are powerful enough to dissect any recursive languages of innite size Among models of weak
computations we are focused on the regular languages because they are generally regarded as weak in
recognition power however they could exhibit surprisingly high power in dissecting innite languages To
be more precise at this point an innite set C is said to dissect a target innite set L as illustrated in
Fig1 if two disjoint sets C  L and C  L  L  C are both innite where C expresses the complement of
C When C is particularly a regular language we succinctly say that L is REG-dissectible We are mostly
interested in clarifying exactly what kind of languages are REG-dissectible A typical example of REG-
dissectible language is the aforementioned context-free languages Corollary 42 As for another example
let us consider a language L1 generated by a grammar whose productions include a special form S  SS
where S is the start symbol Irrelevant to its computational complexity the language L1 can be dissected
by a regular language composed of strings of lengths that are equal to zero modulo 3 because L1 contains
a series of strings of lengths 2k 3k 4k    for an appropriately chosen constant k  0 A more concrete
Present Aliation Department of Information Science University of Fukui 3-9-1 Bunkyo Fukui 910-8507 Japan
example is the language L2  wn  w  a b2 n  N Although this language L2 is not even context-
free it can be easily dissected by a regular language consisting of strings each of which begins with the
letter a The third example language is L3  abnn  n  N whose complement is context-free This
language L3 can be easily dissected by a regular language whose strings contain an even number of as As
a relevant notion a C-pseudorandom language 11 also dissects any language in C with quite large margins
where the intuitive term margin refers to the dierence between two given sets
Through Sections 3 to 4 two wider families of languages constantly-growing languages and semi-linear
languages will be shown to be REG-dissectible Under certain natural conditions the complements the
intersections and the dierences of semi-linear languages are proven to be REG-dissectible using a simple
analysis of length patterns of strings inside a given language This analysis involves a manipulation of solu-
tions of semi-linear equations and those conditions are indeed necessary to guarantee the REG-dissectibility
On the contrary a rather obvious limitation exists for the REG-dissectibility namely as shown in Section 3
there is a logarithmic-space computable language that cannot be REG-dissectible Theorem 35 Taking a
step further forward when limited to bounded languages of Ginsburg and Spanier 5 we will be able to show
that the intersections of nitely many context-free languages are dissected by appropriate regular languages
despite the fact that the intersections of k bounded context-free languages for k  1 form an innite hierar-
chy within the family of context-sensitive languages 7 By elaborating our argument further we will prove
that the entire Boolean hierarchy over the class of bounded context-free languages is also REG-dissectible
Theorem 44 These results will be presented in Section 4
The REG-dissectibility notion has intimate connections to other notions Earlier Domaratzki Shallit
and Yu 3 studied a notion of minimal cover which means the smallest superset A of a given set B
where smallest means that there is no set between A and B with innite margins Motivated by their
notion and results we pay a special attention to a structural property of separating two innite nested
languages with innite margins In our term of separation with innite margins or i-separation in short
we actually mean as illustrated in Fig2 that a pair of innite sets A and B denoted by iB A for which
A covers B with an innite margin can be separated by an appropriate set C that lies in between the two
sets with innite margins As an immediate application of the aforementioned REG-dissectibility results for
the bounded context-free languages we will show in Section 5 that two bounded context-free languages can
be i-separated by bounded context-free languages This i-separation result will be further extended into any
level of the Boolean hierarchy over bounded context-free languages Theorem 52
From the next section we will formally introduce the key notions of the REG-dissectibility and the
i-separation and we will present detailed proofs of our major results mentioned above
2 Notions and Notations
We briey explain a set of basic notions and notations that will be used in the subsequent sections First
we denote by N the set of all natural numbers ie nonnegative integers and we write N for N  0 For
each number n  N the notation n denotes the integer interval 1 2 3     n Associated with three
arbitrary numbers a b k  N we dene Aabk to be the set an  b  n  N n  k The generic notation O
denotes both an all-zero vector and an all-zero matrix of appropriate dimension For two sets A and B the
set x  x  A x 6 B is the dierence between A and B and is expressed as A  B When A is a countable
set the succinct notation A   resp A   indicates that A is an innite resp a nite set Given
two countable sets A and B we write A ae B to mean A  B   and the notation A ae B is used
whenever both A ae B and B ae A hold where the subscript ae stands for almost everywhere
An alphabet  is a nite nonempty set of symbols and a string over  is a nite sequence of symbols
in  The set of all strings over  is denoted  and  expresses the set    where  is the empty
string The length x of any string x is the total number of occurrences of symbols in x For any string x and
Figure 1 C dissects L
Figure 2 C i-separates iB A
any symbol  the notation x stands for the number of occurrences of  in x Given a language S the
length set of S denoted LT S is the collection of all lengths x for any strings x in S We often identify a
language S with its characteristic function which is also denoted S ie Sx  1 if x  S and Sx  0
otherwise The sets of all regular languages and of all context-free languages are expressed respectively as
REG and CFL
The complement of a language B over alphabet  is the set   B and it is denoted B as far as
its underlying alphabet  is clear from the context For ease of our notations we use the following four
class operations 1 C  D  C  D  C  C D  D 2 C  D  C  D  C  C D  D 3
C  D  C  D  C  C D  D and 4 co-C  C  C  C where C and D are language families Given
any family F of languages a language S is said to be F -immune if S is innite and S has no innite subset
belonging to F see eg
3 How to Dissect Languages
Let us recall from Section 1 that an innite language S is REG-dissectible exactly when there exists a regular
language C that dissects S ie
C  S  C  S   Moreover a nonempty language family F is REG-
dissectible if and only if every innite language in F is REG-dissectible Notice that since this denition
disregards all nite languages inside F  we implicitly assume that F contains innite languages We can
naturally expand the REG-dissectibility to a more general notion of C-dissectibility simply by replacing REG
with an arbitrary nonempty language family C however the choice of REG is actually of great importance
In fact it is more interesting to consider low-complexity language families like REG as a candidate for C
One reason is that polynomial-time decidable languages for instance are powerful enough to dissect any
innite recursive languages
Example 31 We claim that every innite recursive language is P-dissectible where P is the family of
all polynomial-time decidable languages Let L be any innite language over alphabet  recognized by a
two-way single-tape deterministic Turing machine M that eventually halts on all inputs For simplicity let
  0 1 and assume that L 6ae  because otherwise a regular set C  0x  x   easily dissects
L Now we dene C as follows Let z0 z1 z2    be a standard lexicographic order of all strings over 
Given each string x to determine the value Cx we go through the following procedure P from round 0 to
round x Initially we set A  R   At round i we rst compute the value Czi by calling P recursively
round by round We then simulate M on the input zi within x steps When M zi  1 we update A to
A  i if Czi  1 and R to R  i if Czi  0 On the contrary when either M zi  0 or M zi is
not obtained within x steps we do nothing After round x if A  R then dene Cx  0 otherwise
dene Cx  1 Clearly C is in P By a diagonalization argument we can show that C  L  C  L  
Therefore every innite recursive language can be dissected by an appropriate language in P
In the following second example we will show that a simple use of advice makes it possible to dissect
arbitrary languages by appropriate regular languages For basic properties of the advice the reader may
refer to 9 10 11
Example 32 We claim that every innite language is REGn-dissectible where REGn is the collection of
advised regular languages each of which is of the form x  M accepts  x
hx for an appropriate deterministic
nite automaton or dfa an advice alphabet  and an advice function h  N   satisfying hn  n
for all n  N where  x
y is a track notation used in 9 To verify this claim take any innite language
L over alphabet  Since L is innite the length set LT L is also innite Hence we partition LT L
into two innite subsets say S1 and S2 that is S1  S2   LT L  S1  S2 and S1  S2  
Without loss of generality we assume that 0 6 S1 Now let us dene an advice function h  N  0 1 as
hn  10n1 if n  S1 and hn  0n otherwise We also dene a dfa M that behaves as follows on input
y if y  10x1 with x  1 then M accepts the input otherwise it rejects the input The language
hx then belongs to REGn Obviously for any string x  L with x  S1 since
C  x  M accepts 
hx  10x1 M accepts 
hx It thus holds that C  L   Similarly for any x  S with x  S2
M rejects 
hx implying C  L   In conclusion C dissects L
As noted in Section 1 a pattern of the lengths of strings in a target language surely plays a key role in
proving its REG-dissectibility This fact turns our attention to languages composed of strings satisfying a
certain length condition known as a constant growth property Formally a nonempty language L is said
to be constantly growing if there exist a constant p  0 and a nite subset K  N that meet the following
condition for every string x in L with x  p there exist a string y  L and a constant c  K for which
x  y  c holds Such languages can be easily dissected by appropriately chosen regular languages as
shown in the next lemma
Lemma 33 Every innite constantly-growing language is REG-dissectible
Let L be any innite language over alphabet  and assume that L is constantly growing with a
constant p  0 and a nite set K  N Now let c denote the maximal element in K and set c  c  1
For each index i  c we take a special language Li  x  L  x  i mod c and we wish to prove
that at least two distinct indices i1 i2  c satisfy that Li1  Li2   Toward a contradiction we
assume otherwise Since L  Sic Li exactly one index i  c must make Li innite Let us x such
an index say i Given any index j  c we set Sij to be y  L  x  Li  x  y  j  Since
L is constantly growing a set Sij must be innite for a certain index j Note that Sij  L holds for
  i  j mod c This containment implies that L is innite contradicting the uniqueness of i since i 6 
Therefore we can choose two distinct indices i1 i2  c for which Li1   Li2    Finally we dene
C  x    x  i1 mod c which is clearly regular Since Li1  C and Li2  C it obviously follows
that C  L  C  L   In other words C dissects L as requested
For a wider application of Lemma 33 it is desirable to strengthen the lemma slightly In what follows we
succinctly write CGL for the family of all constantly-growing languages and use the notion of CGL-immunity
to describe our proposition
Proposition 34 Every language that is not CGL-immune is REG-dissectible
The above proposition comes from Lemma 33 as well as the following transitive closure property of
REG-dissectibility for any two innite languages A and B if A is REG-dissectible and A  B then B is
also REG-dissectible
Luckily a length pattern of strings in a language is not the only feature used to dissect the target language
For example the languages L2 and L3 exemplied in Section 1 are not constantly growing however they
are dissected by regular languages Before presenting more examples of REG-dissectible languages in the
next section we will show a plausible limitation of the dissecting power of the regular languages Following a
standard convention the notation L stands for the family of all languages that can be recognized by two-way
deterministic Turing machines using a read-only input tape together with a constant number of logarithmic
space-bounded readwrite work tapes In the next proposition we will show that L contains a language that
cannot be dissected by any regular languages
Theorem 35 The language family L is not REG-dissectible
Let us consider the unary language S  0n  n  N over the alphabet   0 Firstly we will
show that S is in L For this purpose it suces to design a logarithmic-space deterministic Turing machine
that recognizes S On input of the form 0m the desired machine M writes m in binary on its 1st work tape
using Olog m cells and 1 on its 2nd work tape At each round M reads out a number say n in binary
written on the 2nd tape and checks if m is a multiple of n using the 3rd work tape as a counter up to n If
not then M immediately rejects the input otherwise it increases n by one in binary before entering the
next round If the machine does not reject until n reaches m then it accepts the input
Secondly we want to show that no regular language can dissect S Assume otherwise that is there exists
an innite language C  REG over  that dissects S We need the following technical property Claim 1
of this unary regular language C regarding its length set LT C Let us recall the notation Aabk and in
addition set G  a b k  a b k  N b  a for the description of the property
Claim 1 For any unary language C C is regular i there exists a nite set G  G for which LT C 
SabkG Aabk
Claim 1 is attributed to Parikh 8 and since C  REG the claim guarantees the existence of a nite set
G that characterizes C namely LT C  SabkG Aabk
Since C  S   there exists a triplet a b k in G satisfying m   n  k  m  an  b   
Now we argue that b  0 First take two integers m n with n  k and m  a satisfying an  b  m
Since a  m m  0 mod a holds From an  b  b mod a we obtain b  0 mod a Since b  a b
must be zero as requested Moreover it holds that a  1 To see this fact suppose that a  1 Since A10k
equals n  n  k we conclude that N  A10k   Therefore it follows that LT C  LT S  
contradicting C  S  
Since a  1 and b  0 for a certain large constant k it holds that m  m  k  Aa0k This implies
that LT C  LT S   This is a clear contradiction and therefore C cannot dissect S
For convenience we denote by REG-DISSECT the collection of all innite REG-dissectible languages
It is not dicult to prove the following closurenon-closure properties 1 The set REG-DISSECT is closed
under concatenation reversal Kleene star and union 2 REG-DISSECT is not closed under intersection
with regular languages 3 Moreover REG-DISSECT is not closed under -free homomorphism as well as
under quotient with regular languages where  is the empty string The last two properties can be proven
using certain languages derived from the one presented in the proof of Theorem 35
4 Context-Free Languages and Bounded Languages
Parikh 8 discovered that the number of times that each symbol occurs in each string of a given context-free
language L must satisfy a certain system of linear Diophantine equations This result inspired a notion
of semi-linear languages Context-free languages are an important example of semi-linear languages and
a semi-linear nature of languages will be exploited in certain cases of the REG-dissectibility proofs of the
languages First we will explain the notion of semi-linear sets and languages using a matrix formalism A
subset A of Nk is called linear if there exist a number m  N and an m  1  k nonnegative integer matrix
called a critical matrix T satisfying the following condition for every point v  Nk v is in A if and only
if 1 z1 z2     zmT  v holds for a certain tuple called a solution z1 z2     zm  Nm A semi-linear
set is a union of nitely many linear sets Given any string x over alphabet   1 2     k a Parikh
image of x denoted by x is a point 1 x 2 x     k x in the space Nk and the commutative
image or the Parikh image L of a language L over  refers to the set x  x  L A language L is
called semi-linear whenever L is semi-linear
The family of all semi-linear languages is denoted by SEMILIN and SEMILIN2 expresses the family
SEMILIN  SEMILIN
Lemma 41 SEMILIN  REG-DISSECT but SEMILIN2  REG-DISSECT
Every semi-linear language L is dened by a nite set of certain linear equations and this fact
proves that L has the property of constant growth Lemma 33 therefore leads to the rst part of the lemma
To see that SEMILIN2 is not REG-dissectible let us consider two example languages L1  0n1n  n  N
and L2  1n0n  n  N  0n1n  n  N over the binary alphabet   0 1 Since L1  L2 
n n  n  N L1 and L2 are semi-linear However the intersection L1  L2  SEMILIN2 which equals
0n1n  n  N can be shown to be non-REG-dissectible by an argument similar to the proof of Theorem
Since CFL  SEMILIN 8 Lemma 41 immediately yields the following consequence
Corollary 42 The language family CFL is REG-dissectible
To utilize well-studied properties on semi-linear languages we limit our attention within a restricted
part of context-free languages A language L over alphabet  is said to be bounded if there are xed
nonempty strings w1 w2     wm in  such that L is a subset of Lw1 w2     wm def wi1
i1 i2     im  N 5 For readability we abbreviate as BCFL the family of all bounded context-free lan-
guages The k-conjunctive closure of BCFL denoted BCFLk is dened inductively as follows BCFL1 
BCFL and BCFLk  BCFLk  1  BCFL for every index k  2 Earlier Liu and Weiner 7 proved
that the collection BCFLk  k  N forms an innite hierarchy within the family of context-sensitive
languages
2    wim
Theorem 43 For any index k  1 BCFLk is REG-dissectible
For the proof of Theorem 43 we dene w to be i1 i2     im  Nm  w  wi1
m  for
each string w in Lw1 w2     wm Notice that w could contain numerous elements because w may
w for any
have more than one expression of the form wi1
m  Finally we dene L  SwL
2    wim
2    wim
bounded language L This operator  works similarly as  does and by exploiting this similarity Ginsburg
4 exhibited a close relationship between a bounded context-free language L and the semi-linearity of L
What we need for our proof given below is the following slightly weaker form of 4 Theorem 542 for any
subset L of Lw1     wk in BCFL L is semi-linear and thus L belongs to SEMILIN
Proof of Theorem 43 We start with the following general claim regarding  By viewing w1 w2     wm
as dierent symbols 1 2     m as in 4 a similarity between w and w makes the claim true for
 as well
Claim 2 For any languages L1 L2  SEMILIN if L1L2   and L1L2  L1L2 hold then
L1  L2 is REG-dissectible More generally let k be any number  2 and let L1 L2     Lk be k semi-linear
languages If cid12
cid12
cid12
i1 Li is REG-dissectible
i1 Li hold then Tk
i1 Li  Tk
  and Tk
cid12
cid12
cid12
Since L1  L2  L1  L2 always holds our assumption actually means L1  L2 
L1L2 Since the set of all semi-linear sets is closed under Boolean operations as well as projections
6 we conclude that L1  L2 belongs to SEMILIN Lemma 41 implies that L1  L2  REG-DISSECT The
above proof can be easily extended to the case of the intersection Tk
i1 Li of k commutative images 
Now let L  Lw1 w2     wm and take any k subsets L1 L2     Lk  BCFL of L As noted earlier it
follows that L1 L2     Lk  SEMILIN Here we assume that L  Tk
i1 Li is an innite set By Claim 2 we
Li and x i  k
only need to prove that Tk
arbitrarily Since the inverse image 1v  w  L  v  w must be a singleton there exists a unique
string w  L for which 1v  w From v  Li we obtain the membership w  Li Moreover
since i is arbitrary we conclude that w is in Tk
i1 Li In
conclusion L is REG-dissectible
i1 Li It therefore follows that v  w  Tk
i1 Li Firstly choose any point v  Tk
Li  Tk
Without the condition L1  L2  L1  L2 of Claim 2 nevertheless it is impossible to prove
the intersection of two semi-linear languages to be REG-dissectible since SEMILIN2  REG-DISSECT
Next we will show the REG-dissectibility of the Boolean hierarchy over BCFL where the Boolean
hierarchy over BCFL is dened as follows BCFL1  BCFL BCFL2k  BCFL2k1  co-BCFL and
BCFL2k1  BCFL2k  BCFL for every number k  N Finally we set BCFLBH  Sk1 BCFLk
Theorem 44 The Boolean hierarchy BCFLBH is REG-dissectible
Since BCFL2k1  BCFL2k holds for every number k  N it is sucient to prove that BCFL2k
is REG-dissectible for all indices k  N We will show this claim by induction on k For the basis case of
BCFL2  BCFL  BCFL let L1 and L2 be languages over alphabet  in BCFL and concentrate on the
dierence L1  L2 First we intend to prove Claim 3 In the claim the notation kvk1 for any vector v in a
Euclidean space denotes the 1-norm of v that is kvk1  Pi vi if v  vii
Claim 3 Let L1 and L2 be any two innite semi-linear languages satisfying L1 6ae L2 If L1 
L2  L1  L2 holds then the dierence L1  L2 is REG-dissectible
Since L1 and L2 are both semi-linear the dierence L1  L2 is semi-linear as well
6 By our assumption follows the equality L1  L2  L1  L2 There exists a series of critical
matrices that characterizes L1  L2 Here we want to x one of them say T  vj 1jm where each vj
is a column vector For simplicity we assume that v1 6 O and moreover the second entry of v1 is non-zero
Given each index i  0 1 let us consider a set Ai  w    z1  N  1 2z1  i 0     0T  w 
Since A0  A1  L1  L2 we conclude that A0  A1  L1  L2 It is clear that Ai is innite and the
language Ci  w    w  k1 2z1  i 0     0T k1 is also innite because of Ai  Ci In addition
Ci is regular because every string w in Ci satises w  kv0k1  2z1  ikv1k1 and it is easy to determine
whether or not this is true for any given string w by running an appropriate dfa Since C0  C1   and
Ai  Ci  L1  L2 for each index i  0 1 Ci must dissect L1  L2 Hence L1  L2 is REG-dissectible
Now we claim that L1  L2  L1  L2 for two arbitrary languages L1 and L2 in BCFL To
prove this claim take any point v  L1  L2 Since v  L1 there exists a string w  L1 for
which v  w Note that w 6 L2 because otherwise we obtain v  w  L2 a contradiction Since
w  L1  L2 it follows that v  w  L1  L2 Using a similarity between w and w as in the
proof of Theorem 43 we can apply Claim 3 and then obtain the REG-dissectibility of L1  L2
The remaining task is to deal with the induction case of BCFL2k for any number k  2 For this purpose
we will present a simple fact on the even levels of the Boolean hierarchy over BCFL
Claim 4 For every number k  2 BCFL2k  BCFL2k2  BCFL2
Here we want to prove that  for every number k  2 BCFL2k2  co-BCFL  BCFL2k2
Write F for BCFL2k2  co-BCFL for simplicity Since BCFL2k2  BCFL2k3  co-BCFL holds by the
denition F equals BCFL2k3  co-BCFL  co-BCFL which is actually BCFL2k3  co-BCFL  BCFL
Since BCFL is closed under union ie BCFL  BCFL  BCFL it follows that F  BCFL2k3  co-BCFL
By the denition again the right-hand side of this equation coincides with BCFL2k2 Therefore Statement
 holds
Recall that BCFL2k equals BCFL2k1  co-BCFL which also coincides with BCFL2k2  BCFL 
co-BCFL By DeMorgans law it holds that BCFL2k  BCFL2k2  co-BCFL  BCFL  co-BCFL
Statement  then leads to BCFL2k  BCFL2k2  BCFL2 as requested
Notice that the induction hypothesis ensures the REG-dissectibility of BCFL2k2 Since BCFL2 has been
already proven to be REG-dissectible BCFL2k2  BCFL2 must be REG-dissectible by the closure property
of REG-DISSECT discussed in Section 3 By Claim 4 this family is exactly BCFL2k This completes the
proof of Theorem 44
5 Separation with Innite Margins
In this nal section we will seek a meaningful application of our previous results regarding the REG-
dissectibility of certain bounded languages To describe this application we need to introduce extra termi-
nology Given two innite sets A and B we say that A covers B with an innite margin A i-covers B or A
is an i-cover of B in short if both B  A and A 6ae B hold When A i-covers B we briey write iB A
and call it an i-covering pair A language C is said to separate iB A with innite margins or i-separate
iB A in short if i B  C  A ii A 6ae C and iii B 6ae C For convenience we use the notation
iB A for two language families A and B to denote the set of all i-covering pairs iB A satisfying A  A
and B  B Another language family C is said to i-separate iB A if for every pair iB A in iB A there
exists a set in C that i-separates iB A
The following is a key lemma that bridges between the REG-dissectibility and the i-separation
Lemma 51 Let A and B be any two language families and assume that A  B is REG-dissectible It then
holds that for any A  A and any B  B if A i-covers B then there exists a language in E that i-separates
iB A where E expresses the set B  A  C  A  A B  B C  REG In other words E i-separates
iB A
Let A  A and B  B be two innite languages Let D  A  B and assume that D is innite
Our assumption guarantees the existence of a regular language C for which C dissects D For convenience
we set E  B  A  C Since C dissects D it follows that A  C  B   and A  C  B  
These conditions imply that B  E  A and A  E  E  B   Thus E i-separates iB A Since C
is regular E clearly belongs to the language family E
Concerning bounded context-free languages we can show the following i-separation result
Theorem 52 For any index k  N BCFLk i-separates iBCFLk BCFLk Thus BCFLBH i-separates
iBCFLBH BCFLBH
Proof Hereafter we intend to show that BCFLk  BCFLk is REG-dissectible because an application of
Lemma 51 immediately leads to the theorem For our purpose it suces to prove that BCFLk  BCFLk
is included in BCFLBH because BCFLBH is REG-dissectible by Theorem 43 More strongly we will
demonstrate that for any two indices i j  1 BCFLi  BCFLj  BCFLBH
Given an index pair i j  N  N let Fij  BCFLi  BCFLj  BCFLi  co-BCFLj and Gij 
BCFLi  BCFLj for simplicity We will show that Fij  BCFLBH by induction on i j For the basis case
1 1 since F11  BCFL2 holds clearly F11 is a subset of BCFLBH For the second case 2 1 we rst
note that BCFL4  BCFL2  co-BCFL2  BCFL2  BCFL2  F21  G22 We thus obtain F21  BCFL4
as well as G22  BCFL4 For the induction case i j it is enough to consider the case where i  2k and
j  2m  1 Similar to Claim 4 we can prove the next useful relation
Claim 5 co-BCFL2k1  BCFL2k1  BCFL2
By Claims 4 and 5 F2k2m1 equals BCFL2k2 BCFL2co-BCFL2m1 BCFL2 which can be trans-
formed into F2k22m1  F22m1  G2k22  G22 By the induction hypothesis there are two indices 1 2
such that F2k22m1  BCFL21 and F22m1  BCFL22 By applying Claim 4 repeatedly we then ob-
tain BCFL21  W1
i1 BCFL2
Hence G2k22 equals Wk1
i1 BCFL4  BCFL4k1
This fact implies the containment G2k22  G22  BCFL4k It thus follows that F2k2m1  BCFL21 
BCFL22  BCFL4k  W122k
BCFL2 As discussed before this is equivalent to BCFL2122k which
is obviously included in BCFLBH Therefore we conclude that F2k2m1  BCFLBH
i1 BCFL2 Likewise we obtain BCFL2k2  Wk1
i1 BCFL2 and BCFL22  W2
i1 BCFL2BCFL2  Wk1
i1 G22 which is included in Wk1
6 Future Challenges
We have initiated a fundamental study on the dissecting power of regular languages and an application of
the REG-dissectibility to the i-separation Throughout our initial study a number of open questions have
arisen for future research An important open question concerns the REG-dissectibility of co-CFL and more
widely CFLk and CFLk which are respectively CFL-analogues of BCFLk and BCFLk for every level
k  2 Slightly apart from CFL two other language families 1-CLIN and 1-PLIN introduced in 9 are
at this moment unknown to be REG-dissectible Much anticipated is a development of a coherent theory
of a more general notion of C-dissectibility Concerning the i-separation of iCFL CFL on the contrary a
key question of whether CFL i-separate iCFL CFL still awaits its answer Lately we have learned that
Bucher 2 had raised essentially the same question back in 1980
Acknowledgments The rst author is grateful to Jerey Shallit for drawing his attention to 3 whose
core concept has helped formulate an initial notion of dissectibility and to Jacobo Toran and a reviewer
for pointing to 2 and providing its hard copy in the last moment
References
1 Y Bar-Hillel M Perles and E Shamir On formal properties of simple phrase-structure grammars Z
Phonetik Sprachwiss Kommunik 14 143172 1961
2 W Bucher A density problem for context-free languages Bulletin of EATCS 10 p53 1980
3 M Domaratzki J Shallit and S Yu Minimal covers of formal languages In Proc of the 5th International
Conference on Developments in Language Theory DLT 2001 Lecture Notes in Computer Science Springer
Vol2295 pp319329 2002
4 S Ginsburg The Mathematical Theory of Context-Free Languages McGraw-Hill New York 1966
5 S Ginsburg and E H Spanier Bounded ALGOL-like languages Trans Amer Math Soc 113 333368
6 S Ginsburg and E H Spanier Semigroups Presburger formulas and languages Pacic J Math 16
285296 1966
7 L Y Liu and P Weiner An innite hierarchy of intersections of context-free languages Math Systems
Theory 7 185192 1973
8 R J Parikh On context-free languages J ACM 13 570581 1961
9 K Tadaki T Yamakami and J C H Lin Theory of one-tape linear-time Turing machines Theor Comput
Sci 411 2243 2010 An extended abstract appeared in the Proc of the 30th SOFSEM Conference on
Current Trends in Theory and Practice of Computer Science SOFSEM 2004 Lecture Notes in Computer
Science Springer Vol2932 pp335348 2004
10 T Yamakami The roles of advice to one-tape linear-time Turing machines and nite automata Int J
Found Comput Sci 21 941962 2010 An early version appeared in the Proc of the 20th International
Symposium on Algorithms and Computation ISAAC 2009 Lecture Notes in Computer Science Springer
Vol5878 pp933942 2009
11 T Yamakami Immunity and pseudorandomness of context-free languages Theor Comput Sci 412 6432
6450 2011
The Dissecting Power of Regular Languages
Tomoyuki Yamakami and Yuichi Kato
Abstract A recent study on structural properties of regular and context-free languages has
greatly promoted our basic understandings of the complex behaviors of those languages We
continue the study to examine how regular languages behave when they need to cut numerous
innite languages A particular interest rests on a situation in which a regular language needs to
dissect a given innite language into two subsets of innite size Every context-free language is
dissected by carefully chosen regular languages or it is REG-dissectible In a larger picture we
show that constantly-growing languages and semi-linear languages are REG-dissectible Under
certain natural conditions complements and nite intersections of semi-linear languages also
become REG-dissectible Restricted to bounded languages the intersections of nitely many
context-free languages and more surprisingly the entire Boolean hierarchy over bounded context-
free languages are REG-dissectible As an immediate application of the REG-dissectibility we
show another structural property in which an appropriate bounded context-free language can
separate with innite margins two given nested innite bounded context-free languages
keywords
bounded language semi-linear constantly growing dissectible i-separate
theory of computing formal languages regular language context-free language
1 Background Knowledge and the Results Overview
The exquisitely complex behaviors of formal languages are often dictated by multiple-layers of inner struc-
tures of the languages and a mathematical theory over those languages has been developed in the past
six decades alongside the discovery of some of the hidden structures
In an early stage of the study of
context-free languages for instance a notion of semi-linearitya structural property on the frequency of
occurrences of symbolswas found in 8 and a pumping lemmaanother property regarding the growth
rate of stringswas proven in 1 Similarly underlying structures of regular languages have been analyzed
within a number of dierent frameworks including the Myhill-Nerode theorem monadic second-order logic
and nitely generated monoids Recently new realms of structural properties of languages have been stud-
ied by obvious analogy with structural complexity issues of polynomial time-bounded complexity classes
Such properties include primeimmunity as well as pseudorandomness against the regular and context-free
languages introduced in 11 and a notion of minimal cover which was applied to the regular languages in
3 In the literature numerous key questions concerning the behaviors of languages have been raised but
left unsolved We suspect that the diculty in answering those questions may be rooted in yet-unknown
structures that constitute the languages
To promote our understandings of formal languages in general it may be desirable to unearth the hidden
structural properties of the languages In this line of study this paper aims at exploring another structural
property which is seemingly innocent but possibly fundamental concerning the ability to partition a target
innite set into two portions of innite size This simple property which we name dissectibility seems
more suitable for weak computations because as shown in Section 3 polynomial-time decidable languages
for instance are powerful enough to dissect any recursive languages of innite size Among models of weak
computations we are focused on the regular languages because they are generally regarded as weak in
recognition power however they could exhibit surprisingly high power in dissecting innite languages To
be more precise at this point an innite set C is said to dissect a target innite set L as illustrated in
Fig1 if two disjoint sets C  L and C  L  L  C are both innite where C expresses the complement of
C When C is particularly a regular language we succinctly say that L is REG-dissectible We are mostly
interested in clarifying exactly what kind of languages are REG-dissectible A typical example of REG-
dissectible language is the aforementioned context-free languages Corollary 42 As for another example
let us consider a language L1 generated by a grammar whose productions include a special form S  SS
where S is the start symbol Irrelevant to its computational complexity the language L1 can be dissected
by a regular language composed of strings of lengths that are equal to zero modulo 3 because L1 contains
a series of strings of lengths 2k 3k 4k    for an appropriately chosen constant k  0 A more concrete
Present Aliation Department of Information Science University of Fukui 3-9-1 Bunkyo Fukui 910-8507 Japan
example is the language L2  wn  w  a b2 n  N Although this language L2 is not even context-
free it can be easily dissected by a regular language consisting of strings each of which begins with the
letter a The third example language is L3  abnn  n  N whose complement is context-free This
language L3 can be easily dissected by a regular language whose strings contain an even number of as As
a relevant notion a C-pseudorandom language 11 also dissects any language in C with quite large margins
where the intuitive term margin refers to the dierence between two given sets
Through Sections 3 to 4 two wider families of languages constantly-growing languages and semi-linear
languages will be shown to be REG-dissectible Under certain natural conditions the complements the
intersections and the dierences of semi-linear languages are proven to be REG-dissectible using a simple
analysis of length patterns of strings inside a given language This analysis involves a manipulation of solu-
tions of semi-linear equations and those conditions are indeed necessary to guarantee the REG-dissectibility
On the contrary a rather obvious limitation exists for the REG-dissectibility namely as shown in Section 3
there is a logarithmic-space computable language that cannot be REG-dissectible Theorem 35 Taking a
step further forward when limited to bounded languages of Ginsburg and Spanier 5 we will be able to show
that the intersections of nitely many context-free languages are dissected by appropriate regular languages
despite the fact that the intersections of k bounded context-free languages for k  1 form an innite hierar-
chy within the family of context-sensitive languages 7 By elaborating our argument further we will prove
that the entire Boolean hierarchy over the class of bounded context-free languages is also REG-dissectible
Theorem 44 These results will be presented in Section 4
The REG-dissectibility notion has intimate connections to other notions Earlier Domaratzki Shallit
and Yu 3 studied a notion of minimal cover which means the smallest superset A of a given set B
where smallest means that there is no set between A and B with innite margins Motivated by their
notion and results we pay a special attention to a structural property of separating two innite nested
languages with innite margins In our term of separation with innite margins or i-separation in short
we actually mean as illustrated in Fig2 that a pair of innite sets A and B denoted by iB A for which
A covers B with an innite margin can be separated by an appropriate set C that lies in between the two
sets with innite margins As an immediate application of the aforementioned REG-dissectibility results for
the bounded context-free languages we will show in Section 5 that two bounded context-free languages can
be i-separated by bounded context-free languages This i-separation result will be further extended into any
level of the Boolean hierarchy over bounded context-free languages Theorem 52
From the next section we will formally introduce the key notions of the REG-dissectibility and the
i-separation and we will present detailed proofs of our major results mentioned above
2 Notions and Notations
We briey explain a set of basic notions and notations that will be used in the subsequent sections First
we denote by N the set of all natural numbers ie nonnegative integers and we write N for N  0 For
each number n  N the notation n denotes the integer interval 1 2 3     n Associated with three
arbitrary numbers a b k  N we dene Aabk to be the set an  b  n  N n  k The generic notation O
denotes both an all-zero vector and an all-zero matrix of appropriate dimension For two sets A and B the
set x  x  A x 6 B is the dierence between A and B and is expressed as A  B When A is a countable
set the succinct notation A   resp A   indicates that A is an innite resp a nite set Given
two countable sets A and B we write A ae B to mean A  B   and the notation A ae B is used
whenever both A ae B and B ae A hold where the subscript ae stands for almost everywhere
An alphabet  is a nite nonempty set of symbols and a string over  is a nite sequence of symbols
in  The set of all strings over  is denoted  and  expresses the set    where  is the empty
string The length x of any string x is the total number of occurrences of symbols in x For any string x and
Figure 1 C dissects L
Figure 2 C i-separates iB A
any symbol  the notation x stands for the number of occurrences of  in x Given a language S the
length set of S denoted LT S is the collection of all lengths x for any strings x in S We often identify a
language S with its characteristic function which is also denoted S ie Sx  1 if x  S and Sx  0
otherwise The sets of all regular languages and of all context-free languages are expressed respectively as
REG and CFL
The complement of a language B over alphabet  is the set   B and it is denoted B as far as
its underlying alphabet  is clear from the context For ease of our notations we use the following four
class operations 1 C  D  C  D  C  C D  D 2 C  D  C  D  C  C D  D 3
C  D  C  D  C  C D  D and 4 co-C  C  C  C where C and D are language families Given
any family F of languages a language S is said to be F -immune if S is innite and S has no innite subset
belonging to F see eg
3 How to Dissect Languages
Let us recall from Section 1 that an innite language S is REG-dissectible exactly when there exists a regular
language C that dissects S ie
C  S  C  S   Moreover a nonempty language family F is REG-
dissectible if and only if every innite language in F is REG-dissectible Notice that since this denition
disregards all nite languages inside F  we implicitly assume that F contains innite languages We can
naturally expand the REG-dissectibility to a more general notion of C-dissectibility simply by replacing REG
with an arbitrary nonempty language family C however the choice of REG is actually of great importance
In fact it is more interesting to consider low-complexity language families like REG as a candidate for C
One reason is that polynomial-time decidable languages for instance are powerful enough to dissect any
innite recursive languages
Example 31 We claim that every innite recursive language is P-dissectible where P is the family of
all polynomial-time decidable languages Let L be any innite language over alphabet  recognized by a
two-way single-tape deterministic Turing machine M that eventually halts on all inputs For simplicity let
  0 1 and assume that L 6ae  because otherwise a regular set C  0x  x   easily dissects
L Now we dene C as follows Let z0 z1 z2    be a standard lexicographic order of all strings over 
Given each string x to determine the value Cx we go through the following procedure P from round 0 to
round x Initially we set A  R   At round i we rst compute the value Czi by calling P recursively
round by round We then simulate M on the input zi within x steps When M zi  1 we update A to
A  i if Czi  1 and R to R  i if Czi  0 On the contrary when either M zi  0 or M zi is
not obtained within x steps we do nothing After round x if A  R then dene Cx  0 otherwise
dene Cx  1 Clearly C is in P By a diagonalization argument we can show that C  L  C  L  
Therefore every innite recursive language can be dissected by an appropriate language in P
In the following second example we will show that a simple use of advice makes it possible to dissect
arbitrary languages by appropriate regular languages For basic properties of the advice the reader may
refer to 9 10 11
Example 32 We claim that every innite language is REGn-dissectible where REGn is the collection of
advised regular languages each of which is of the form x  M accepts  x
hx for an appropriate deterministic
nite automaton or dfa an advice alphabet  and an advice function h  N   satisfying hn  n
for all n  N where  x
y is a track notation used in 9 To verify this claim take any innite language
L over alphabet  Since L is innite the length set LT L is also innite Hence we partition LT L
into two innite subsets say S1 and S2 that is S1  S2   LT L  S1  S2 and S1  S2  
Without loss of generality we assume that 0 6 S1 Now let us dene an advice function h  N  0 1 as
hn  10n1 if n  S1 and hn  0n otherwise We also dene a dfa M that behaves as follows on input
y if y  10x1 with x  1 then M accepts the input otherwise it rejects the input The language
hx then belongs to REGn Obviously for any string x  L with x  S1 since
C  x  M accepts 
hx  10x1 M accepts 
hx It thus holds that C  L   Similarly for any x  S with x  S2
M rejects 
hx implying C  L   In conclusion C dissects L
As noted in Section 1 a pattern of the lengths of strings in a target language surely plays a key role in
proving its REG-dissectibility This fact turns our attention to languages composed of strings satisfying a
certain length condition known as a constant growth property Formally a nonempty language L is said
to be constantly growing if there exist a constant p  0 and a nite subset K  N that meet the following
condition for every string x in L with x  p there exist a string y  L and a constant c  K for which
x  y  c holds Such languages can be easily dissected by appropriately chosen regular languages as
shown in the next lemma
Lemma 33 Every innite constantly-growing language is REG-dissectible
Let L be any innite language over alphabet  and assume that L is constantly growing with a
constant p  0 and a nite set K  N Now let c denote the maximal element in K and set c  c  1
For each index i  c we take a special language Li  x  L  x  i mod c and we wish to prove
that at least two distinct indices i1 i2  c satisfy that Li1  Li2   Toward a contradiction we
assume otherwise Since L  Sic Li exactly one index i  c must make Li innite Let us x such
an index say i Given any index j  c we set Sij to be y  L  x  Li  x  y  j  Since
L is constantly growing a set Sij must be innite for a certain index j Note that Sij  L holds for
  i  j mod c This containment implies that L is innite contradicting the uniqueness of i since i 6 
Therefore we can choose two distinct indices i1 i2  c for which Li1   Li2    Finally we dene
C  x    x  i1 mod c which is clearly regular Since Li1  C and Li2  C it obviously follows
that C  L  C  L   In other words C dissects L as requested
For a wider application of Lemma 33 it is desirable to strengthen the lemma slightly In what follows we
succinctly write CGL for the family of all constantly-growing languages and use the notion of CGL-immunity
to describe our proposition
Proposition 34 Every language that is not CGL-immune is REG-dissectible
The above proposition comes from Lemma 33 as well as the following transitive closure property of
REG-dissectibility for any two innite languages A and B if A is REG-dissectible and A  B then B is
also REG-dissectible
Luckily a length pattern of strings in a language is not the only feature used to dissect the target language
For example the languages L2 and L3 exemplied in Section 1 are not constantly growing however they
are dissected by regular languages Before presenting more examples of REG-dissectible languages in the
next section we will show a plausible limitation of the dissecting power of the regular languages Following a
standard convention the notation L stands for the family of all languages that can be recognized by two-way
deterministic Turing machines using a read-only input tape together with a constant number of logarithmic
space-bounded readwrite work tapes In the next proposition we will show that L contains a language that
cannot be dissected by any regular languages
Theorem 35 The language family L is not REG-dissectible
Let us consider the unary language S  0n  n  N over the alphabet   0 Firstly we will
show that S is in L For this purpose it suces to design a logarithmic-space deterministic Turing machine
that recognizes S On input of the form 0m the desired machine M writes m in binary on its 1st work tape
using Olog m cells and 1 on its 2nd work tape At each round M reads out a number say n in binary
written on the 2nd tape and checks if m is a multiple of n using the 3rd work tape as a counter up to n If
not then M immediately rejects the input otherwise it increases n by one in binary before entering the
next round If the machine does not reject until n reaches m then it accepts the input
Secondly we want to show that no regular language can dissect S Assume otherwise that is there exists
an innite language C  REG over  that dissects S We need the following technical property Claim 1
of this unary regular language C regarding its length set LT C Let us recall the notation Aabk and in
addition set G  a b k  a b k  N b  a for the description of the property
Claim 1 For any unary language C C is regular i there exists a nite set G  G for which LT C 
SabkG Aabk
Claim 1 is attributed to Parikh 8 and since C  REG the claim guarantees the existence of a nite set
G that characterizes C namely LT C  SabkG Aabk
Since C  S   there exists a triplet a b k in G satisfying m   n  k  m  an  b   
Now we argue that b  0 First take two integers m n with n  k and m  a satisfying an  b  m
Since a  m m  0 mod a holds From an  b  b mod a we obtain b  0 mod a Since b  a b
must be zero as requested Moreover it holds that a  1 To see this fact suppose that a  1 Since A10k
equals n  n  k we conclude that N  A10k   Therefore it follows that LT C  LT S  
contradicting C  S  
Since a  1 and b  0 for a certain large constant k it holds that m  m  k  Aa0k This implies
that LT C  LT S   This is a clear contradiction and therefore C cannot dissect S
For convenience we denote by REG-DISSECT the collection of all innite REG-dissectible languages
It is not dicult to prove the following closurenon-closure properties 1 The set REG-DISSECT is closed
under concatenation reversal Kleene star and union 2 REG-DISSECT is not closed under intersection
with regular languages 3 Moreover REG-DISSECT is not closed under -free homomorphism as well as
under quotient with regular languages where  is the empty string The last two properties can be proven
using certain languages derived from the one presented in the proof of Theorem 35
4 Context-Free Languages and Bounded Languages
Parikh 8 discovered that the number of times that each symbol occurs in each string of a given context-free
language L must satisfy a certain system of linear Diophantine equations This result inspired a notion
of semi-linear languages Context-free languages are an important example of semi-linear languages and
a semi-linear nature of languages will be exploited in certain cases of the REG-dissectibility proofs of the
languages First we will explain the notion of semi-linear sets and languages using a matrix formalism A
subset A of Nk is called linear if there exist a number m  N and an m  1  k nonnegative integer matrix
called a critical matrix T satisfying the following condition for every point v  Nk v is in A if and only
if 1 z1 z2     zmT  v holds for a certain tuple called a solution z1 z2     zm  Nm A semi-linear
set is a union of nitely many linear sets Given any string x over alphabet   1 2     k a Parikh
image of x denoted by x is a point 1 x 2 x     k x in the space Nk and the commutative
image or the Parikh image L of a language L over  refers to the set x  x  L A language L is
called semi-linear whenever L is semi-linear
The family of all semi-linear languages is denoted by SEMILIN and SEMILIN2 expresses the family
SEMILIN  SEMILIN
Lemma 41 SEMILIN  REG-DISSECT but SEMILIN2  REG-DISSECT
Every semi-linear language L is dened by a nite set of certain linear equations and this fact
proves that L has the property of constant growth Lemma 33 therefore leads to the rst part of the lemma
To see that SEMILIN2 is not REG-dissectible let us consider two example languages L1  0n1n  n  N
and L2  1n0n  n  N  0n1n  n  N over the binary alphabet   0 1 Since L1  L2 
n n  n  N L1 and L2 are semi-linear However the intersection L1  L2  SEMILIN2 which equals
0n1n  n  N can be shown to be non-REG-dissectible by an argument similar to the proof of Theorem
Since CFL  SEMILIN 8 Lemma 41 immediately yields the following consequence
Corollary 42 The language family CFL is REG-dissectible
To utilize well-studied properties on semi-linear languages we limit our attention within a restricted
part of context-free languages A language L over alphabet  is said to be bounded if there are xed
nonempty strings w1 w2     wm in  such that L is a subset of Lw1 w2     wm def wi1
i1 i2     im  N 5 For readability we abbreviate as BCFL the family of all bounded context-free lan-
guages The k-conjunctive closure of BCFL denoted BCFLk is dened inductively as follows BCFL1 
BCFL and BCFLk  BCFLk  1  BCFL for every index k  2 Earlier Liu and Weiner 7 proved
that the collection BCFLk  k  N forms an innite hierarchy within the family of context-sensitive
languages
2    wim
Theorem 43 For any index k  1 BCFLk is REG-dissectible
For the proof of Theorem 43 we dene w to be i1 i2     im  Nm  w  wi1
m  for
each string w in Lw1 w2     wm Notice that w could contain numerous elements because w may
w for any
have more than one expression of the form wi1
m  Finally we dene L  SwL
2    wim
2    wim
bounded language L This operator  works similarly as  does and by exploiting this similarity Ginsburg
4 exhibited a close relationship between a bounded context-free language L and the semi-linearity of L
What we need for our proof given below is the following slightly weaker form of 4 Theorem 542 for any
subset L of Lw1     wk in BCFL L is semi-linear and thus L belongs to SEMILIN
Proof of Theorem 43 We start with the following general claim regarding  By viewing w1 w2     wm
as dierent symbols 1 2     m as in 4 a similarity between w and w makes the claim true for
 as well
Claim 2 For any languages L1 L2  SEMILIN if L1L2   and L1L2  L1L2 hold then
L1  L2 is REG-dissectible More generally let k be any number  2 and let L1 L2     Lk be k semi-linear
languages If cid12
cid12
cid12
i1 Li is REG-dissectible
i1 Li hold then Tk
i1 Li  Tk
  and Tk
cid12
cid12
cid12
Since L1  L2  L1  L2 always holds our assumption actually means L1  L2 
L1L2 Since the set of all semi-linear sets is closed under Boolean operations as well as projections
6 we conclude that L1  L2 belongs to SEMILIN Lemma 41 implies that L1  L2  REG-DISSECT The
above proof can be easily extended to the case of the intersection Tk
i1 Li of k commutative images 
Now let L  Lw1 w2     wm and take any k subsets L1 L2     Lk  BCFL of L As noted earlier it
follows that L1 L2     Lk  SEMILIN Here we assume that L  Tk
i1 Li is an innite set By Claim 2 we
Li and x i  k
only need to prove that Tk
arbitrarily Since the inverse image 1v  w  L  v  w must be a singleton there exists a unique
string w  L for which 1v  w From v  Li we obtain the membership w  Li Moreover
since i is arbitrary we conclude that w is in Tk
i1 Li In
conclusion L is REG-dissectible
i1 Li It therefore follows that v  w  Tk
i1 Li Firstly choose any point v  Tk
Li  Tk
Without the condition L1  L2  L1  L2 of Claim 2 nevertheless it is impossible to prove
the intersection of two semi-linear languages to be REG-dissectible since SEMILIN2  REG-DISSECT
Next we will show the REG-dissectibility of the Boolean hierarchy over BCFL where the Boolean
hierarchy over BCFL is dened as follows BCFL1  BCFL BCFL2k  BCFL2k1  co-BCFL and
BCFL2k1  BCFL2k  BCFL for every number k  N Finally we set BCFLBH  Sk1 BCFLk
Theorem 44 The Boolean hierarchy BCFLBH is REG-dissectible
Since BCFL2k1  BCFL2k holds for every number k  N it is sucient to prove that BCFL2k
is REG-dissectible for all indices k  N We will show this claim by induction on k For the basis case of
BCFL2  BCFL  BCFL let L1 and L2 be languages over alphabet  in BCFL and concentrate on the
dierence L1  L2 First we intend to prove Claim 3 In the claim the notation kvk1 for any vector v in a
Euclidean space denotes the 1-norm of v that is kvk1  Pi vi if v  vii
Claim 3 Let L1 and L2 be any two innite semi-linear languages satisfying L1 6ae L2 If L1 
L2  L1  L2 holds then the dierence L1  L2 is REG-dissectible
Since L1 and L2 are both semi-linear the dierence L1  L2 is semi-linear as well
6 By our assumption follows the equality L1  L2  L1  L2 There exists a series of critical
matrices that characterizes L1  L2 Here we want to x one of them say T  vj 1jm where each vj
is a column vector For simplicity we assume that v1 6 O and moreover the second entry of v1 is non-zero
Given each index i  0 1 let us consider a set Ai  w    z1  N  1 2z1  i 0     0T  w 
Since A0  A1  L1  L2 we conclude that A0  A1  L1  L2 It is clear that Ai is innite and the
language Ci  w    w  k1 2z1  i 0     0T k1 is also innite because of Ai  Ci In addition
Ci is regular because every string w in Ci satises w  kv0k1  2z1  ikv1k1 and it is easy to determine
whether or not this is true for any given string w by running an appropriate dfa Since C0  C1   and
Ai  Ci  L1  L2 for each index i  0 1 Ci must dissect L1  L2 Hence L1  L2 is REG-dissectible
Now we claim that L1  L2  L1  L2 for two arbitrary languages L1 and L2 in BCFL To
prove this claim take any point v  L1  L2 Since v  L1 there exists a string w  L1 for
which v  w Note that w 6 L2 because otherwise we obtain v  w  L2 a contradiction Since
w  L1  L2 it follows that v  w  L1  L2 Using a similarity between w and w as in the
proof of Theorem 43 we can apply Claim 3 and then obtain the REG-dissectibility of L1  L2
The remaining task is to deal with the induction case of BCFL2k for any number k  2 For this purpose
we will present a simple fact on the even levels of the Boolean hierarchy over BCFL
Claim 4 For every number k  2 BCFL2k  BCFL2k2  BCFL2
Here we want to prove that  for every number k  2 BCFL2k2  co-BCFL  BCFL2k2
Write F for BCFL2k2  co-BCFL for simplicity Since BCFL2k2  BCFL2k3  co-BCFL holds by the
denition F equals BCFL2k3  co-BCFL  co-BCFL which is actually BCFL2k3  co-BCFL  BCFL
Since BCFL is closed under union ie BCFL  BCFL  BCFL it follows that F  BCFL2k3  co-BCFL
By the denition again the right-hand side of this equation coincides with BCFL2k2 Therefore Statement
 holds
Recall that BCFL2k equals BCFL2k1  co-BCFL which also coincides with BCFL2k2  BCFL 
co-BCFL By DeMorgans law it holds that BCFL2k  BCFL2k2  co-BCFL  BCFL  co-BCFL
Statement  then leads to BCFL2k  BCFL2k2  BCFL2 as requested
Notice that the induction hypothesis ensures the REG-dissectibility of BCFL2k2 Since BCFL2 has been
already proven to be REG-dissectible BCFL2k2  BCFL2 must be REG-dissectible by the closure property
of REG-DISSECT discussed in Section 3 By Claim 4 this family is exactly BCFL2k This completes the
proof of Theorem 44
5 Separation with Innite Margins
In this nal section we will seek a meaningful application of our previous results regarding the REG-
dissectibility of certain bounded languages To describe this application we need to introduce extra termi-
nology Given two innite sets A and B we say that A covers B with an innite margin A i-covers B or A
is an i-cover of B in short if both B  A and A 6ae B hold When A i-covers B we briey write iB A
and call it an i-covering pair A language C is said to separate iB A with innite margins or i-separate
iB A in short if i B  C  A ii A 6ae C and iii B 6ae C For convenience we use the notation
iB A for two language families A and B to denote the set of all i-covering pairs iB A satisfying A  A
and B  B Another language family C is said to i-separate iB A if for every pair iB A in iB A there
exists a set in C that i-separates iB A
The following is a key lemma that bridges between the REG-dissectibility and the i-separation
Lemma 51 Let A and B be any two language families and assume that A  B is REG-dissectible It then
holds that for any A  A and any B  B if A i-covers B then there exists a language in E that i-separates
iB A where E expresses the set B  A  C  A  A B  B C  REG In other words E i-separates
iB A
Let A  A and B  B be two innite languages Let D  A  B and assume that D is innite
Our assumption guarantees the existence of a regular language C for which C dissects D For convenience
we set E  B  A  C Since C dissects D it follows that A  C  B   and A  C  B  
These conditions imply that B  E  A and A  E  E  B   Thus E i-separates iB A Since C
is regular E clearly belongs to the language family E
Concerning bounded context-free languages we can show the following i-separation result
Theorem 52 For any index k  N BCFLk i-separates iBCFLk BCFLk Thus BCFLBH i-separates
iBCFLBH BCFLBH
Proof Hereafter we intend to show that BCFLk  BCFLk is REG-dissectible because an application of
Lemma 51 immediately leads to the theorem For our purpose it suces to prove that BCFLk  BCFLk
is included in BCFLBH because BCFLBH is REG-dissectible by Theorem 43 More strongly we will
demonstrate that for any two indices i j  1 BCFLi  BCFLj  BCFLBH
Given an index pair i j  N  N let Fij  BCFLi  BCFLj  BCFLi  co-BCFLj and Gij 
BCFLi  BCFLj for simplicity We will show that Fij  BCFLBH by induction on i j For the basis case
1 1 since F11  BCFL2 holds clearly F11 is a subset of BCFLBH For the second case 2 1 we rst
note that BCFL4  BCFL2  co-BCFL2  BCFL2  BCFL2  F21  G22 We thus obtain F21  BCFL4
as well as G22  BCFL4 For the induction case i j it is enough to consider the case where i  2k and
j  2m  1 Similar to Claim 4 we can prove the next useful relation
Claim 5 co-BCFL2k1  BCFL2k1  BCFL2
By Claims 4 and 5 F2k2m1 equals BCFL2k2 BCFL2co-BCFL2m1 BCFL2 which can be trans-
formed into F2k22m1  F22m1  G2k22  G22 By the induction hypothesis there are two indices 1 2
such that F2k22m1  BCFL21 and F22m1  BCFL22 By applying Claim 4 repeatedly we then ob-
tain BCFL21  W1
i1 BCFL2
Hence G2k22 equals Wk1
i1 BCFL4  BCFL4k1
This fact implies the containment G2k22  G22  BCFL4k It thus follows that F2k2m1  BCFL21 
BCFL22  BCFL4k  W122k
BCFL2 As discussed before this is equivalent to BCFL2122k which
is obviously included in BCFLBH Therefore we conclude that F2k2m1  BCFLBH
i1 BCFL2 Likewise we obtain BCFL2k2  Wk1
i1 BCFL2 and BCFL22  W2
i1 BCFL2BCFL2  Wk1
i1 G22 which is included in Wk1
6 Future Challenges
We have initiated a fundamental study on the dissecting power of regular languages and an application of
the REG-dissectibility to the i-separation Throughout our initial study a number of open questions have
arisen for future research An important open question concerns the REG-dissectibility of co-CFL and more
widely CFLk and CFLk which are respectively CFL-analogues of BCFLk and BCFLk for every level
k  2 Slightly apart from CFL two other language families 1-CLIN and 1-PLIN introduced in 9 are
at this moment unknown to be REG-dissectible Much anticipated is a development of a coherent theory
of a more general notion of C-dissectibility Concerning the i-separation of iCFL CFL on the contrary a
key question of whether CFL i-separate iCFL CFL still awaits its answer Lately we have learned that
Bucher 2 had raised essentially the same question back in 1980
Acknowledgments The rst author is grateful to Jerey Shallit for drawing his attention to 3 whose
core concept has helped formulate an initial notion of dissectibility and to Jacobo Toran and a reviewer
for pointing to 2 and providing its hard copy in the last moment
References
1 Y Bar-Hillel M Perles and E Shamir On formal properties of simple phrase-structure grammars Z
Phonetik Sprachwiss Kommunik 14 143172 1961
2 W Bucher A density problem for context-free languages Bulletin of EATCS 10 p53 1980
3 M Domaratzki J Shallit and S Yu Minimal covers of formal languages In Proc of the 5th International
Conference on Developments in Language Theory DLT 2001 Lecture Notes in Computer Science Springer
Vol2295 pp319329 2002
4 S Ginsburg The Mathematical Theory of Context-Free Languages McGraw-Hill New York 1966
5 S Ginsburg and E H Spanier Bounded ALGOL-like languages Trans Amer Math Soc 113 333368
6 S Ginsburg and E H Spanier Semigroups Presburger formulas and languages Pacic J Math 16
285296 1966
7 L Y Liu and P Weiner An innite hierarchy of intersections of context-free languages Math Systems
Theory 7 185192 1973
8 R J Parikh On context-free languages J ACM 13 570581 1961
9 K Tadaki T Yamakami and J C H Lin Theory of one-tape linear-time Turing machines Theor Comput
Sci 411 2243 2010 An extended abstract appeared in the Proc of the 30th SOFSEM Conference on
Current Trends in Theory and Practice of Computer Science SOFSEM 2004 Lecture Notes in Computer
Science Springer Vol2932 pp335348 2004
10 T Yamakami The roles of advice to one-tape linear-time Turing machines and nite automata Int J
Found Comput Sci 21 941962 2010 An early version appeared in the Proc of the 20th International
Symposium on Algorithms and Computation ISAAC 2009 Lecture Notes in Computer Science Springer
Vol5878 pp933942 2009
11 T Yamakami Immunity and pseudorandomness of context-free languages Theor Comput Sci 412 6432
6450 2011
