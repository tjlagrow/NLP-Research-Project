On the Development of Text Input Method                             
- Lessons Learned 
Tian-Jian Jiang1 Deng Liu2 Meng-Juei Hsieh3 and Wen-Lian Hsu1 
1 Institute of Information Science Academia Sinica 
No 128 Sec 2 Academia Road 
115 Nan-kang Taipei Taiwan 
2 Founder the OpenVanilla Project 
3 School of Information and Computer Sciences University of California Irvine 
tmjiang hsuiissinicaedutw 
lukhnosopenvanillaorg 
mengjueiuciedu 
Abstract Intelligent Input Methods IM are essential for making text entries in 
many  East  Asian  scripts  but their  application to other  languages  has  not  been 
fully  explored  This  paper  discusses  how  such  tools  can  contribute  to  the 
development of computer processing of other oriental languages We propose a 
design  philosophy  that  regards  IM  as  a  text  service  platform  and  treats  the 
study  of  IM  as  a  cross  disciplinary  subject  from  the  perspectives  of  software 
engineering  human-computer 
language 
processing NLP We discuss these three perspectives and indicate a number of 
possible future research directions 
HCI  and  natural 
interaction 
Keywords 
human-computer interaction software engineering 
input  method 
text  entry  natural 
language  processing 
Introduction 
To date most papers on text entry and Input Methods IM have focused on automatic 
conversion  from  Chinese  syllables  to  words  Chang  et  al  1  proposed  a  system  of 
constraint satisfaction Kuo 2 developed an application called Hanin using syntactic 
connection  tables  and  semantic  distances  while  Hsu  3  presented  an  application 
called  GOING  based  on  a  semantic  template  matching  approach  The  latter  has 
become  one  of  the  most  widely  used  IMs  in  Taiwan  In  addition  papers  indirectly 
related  to  automatic  Chinese  syllable-to-word  conversion  have  been  presented  at 
ICCPOL conferences for example Tatuoka and LIPSs 4 Vietnamese input system 
and Zhangs 5 web-based Chinese character input system used in Hong Kong In this 
paper  we  review  these  methods  and  discuss  the  lessons  we  have  learned  from 
implementing  them  Our  goal  is  to  share  these  experiences  with  both  the  academic 
and industrial communities and thereby help meet the challenges ahead 
The  remainder  of  the  paper  is  divided  into  three  sections  software  engineering 
human-computer  interaction  and  natural  language  processing  We  conclude  by 
discussing possible future research directions 
On the Development of Text Input Method                              - Lessons Learned      2 
IM as a Software Engineering Subject 
Every  modern  GUI-based  desktop  environment  is  equipped  with  sets  of  API  for 
developing  IMs  that  meet  the  needs  of  East  Asian  markets  6  However  these  API 
sets  are  primitive  in  nature  A  developer  who  wishes  to  build  a  fully  functional  IM 
system  must  to  handle  a  myriad  of  UI  events  and  presentation  task  This  task  has 
become increasingly difficult for more advanced operating systems such as Microsoft 
Windows  and  Apples  Mac  OS  X  as  the  number  of  features  and  possible  UI  events 
grows For X11-based desktops the XIM Framework 7 has long been the standard 
but building IM modules with it is no easier than building one for Windows or OS X 
A modern IM framework must have certain features First it must provide a set of 
abstract API There has to be a dynamic-loading or server-like middle layer between 
applications  The framework  must also implement a set of  platform-specific  widgets 
and  event  handlers  With  such  a  framework  a  third-party  IM  developer  can  then 
concentrate  on  algorithm  design  without  being  distracted  by  platform  dependent 
features 
In general the API of the middle layer should follow the Open-Closed principle 8 
which states that software entities modules should be open for extensions but closed 
to  modifications  Being  the  system  software  IM  frameworks  make  extensive  use  of 
services provide by modern operating systems IIIMF is designed with a socket-based 
client-server  architecture  and  IM  modules  must  follow  its  protocol  to  provide 
services OpenVanilla 9 and SCIM 10 are based on the dynamic-loading approach 
Their  IM  modules  as  dynamically  loaded  libraries  and  middle-layers  stay  in  the 
same  address  space  and  modules  are  loaded  Although  such  a  design  reduces  the 
communication complexity substantially it is limited to a single address space Thus 
modules  available  on  one  machine  cannot  provide  services  to  modules  on  other 
machines Recently there has been a trend towards client-server based designs Both 
OpenVanilla and SCIM now use IPC to talk to their respective  UI servers  though 
modules are not yet affected 
Fig 1    Architecture of OpenVanilla platform 
Isokoski  and  Raisamo  11  developed  a  Java-based  client-server  architecture  that 
integrates different text entry applications on handheld devices They compared their 
On the Development of Text Input Method                              - Lessons Learned      3 
work  with  the  Java  Input  Method  Framework  Java  IMF  12  the  Microsoft  Text 
Service  Framework  MS  TSF  13  and  the  Internet-Intranet  Input  Method 
Framework  IIIMF  14  and  focused  on  adapting  a  given  text  entry  application  to 
different  devices  However  the  authors  overlooked  an  important  point  about 
bandwidth  people  who  want  to  enter  text  quickly  and  continuously  find  excessive 
network  latency  a  burden  For  someone  using  Traditional  Chinese  a  speed  of  60 
characters per second  with an average of four  keystrokes to compose a character is 
not  uncommon  This  means  that  any  response  must  be  within  250  ms  including  UI 
event handling and information retrieval time Experienced users can type faster thus 
better response times are necessary Wang and Mankoff 15 proposed an information 
theory-based  model  that  can  quantitatively  evaluate  relative  bandwidth  usage  It 
provides  theoretical  and  architectural  support  for  better  device  adaptation  for  IMs 
with high bandwidth usage However despite these developments the majority of IM 
modules  and  frameworks  are  still  limited  to  a  single  address  space  or  use  the 
inter-process communication IPC schemes at most The remote procedure call RPC 
based design remains impractical 
Another area of interest is the nature of IMs East Asian text entry is in fact a series 
of  transformations  whereby  several  keystrokes  are  transformed  into  a  character  In 
software  engineering  terms  therefore  IM  modules  can  be  regarded  as  filters 
However filtering does not have to stop at keystroke-to-character transformation We 
can apply or even connect a series of filters so that the output of an IM module can 
be converted according to the user s needs 9 One example which is now a common 
feature in Chinese IM frameworks is that users can apply a  Traditional to Simplified 
Chinese  filter to an IM so that the script of the typed text is converted on the fly 
Fig 2 An IM involves a chain of transformations and events 
Even  with  the  IM  frameworks  cited  above  IM  modules  are  very  difficult  to  port 
and  debug  IM  frameworks  are  even  more  difficult  to  develop  and  maintain  as  the 
slowness of porting IIIMF SCIM and OpenVanilla demonstrates Companies such as 
Microsoft  Apple  and  Sun  also  face  the  problem  of  a  shortage  of  engineering 
expertise 
large  number  of 
under-maintained legacy codex This is exemplified by the fact that Apples Mac OS 
the  complexity  posed  by  a 
this  field  and 
On the Development of Text Input Method                              - Lessons Learned      4 
X now a mature system still keeps an IM component architecture dated back to the 
mid-1990s 16 Aside from raising possible security issues this poses another major 
development problem in terms of maintenance cost 
Human-Computer Interaction Principles 
In  the  foreseeable  future  the  keyboard  will  remain  the  primary  text  entry  device 
though  other  concepts  such  as  voice  recognition  could  be  potential  alternatives 
Portable devices such as mobile phones present new challenges in keyboard and IM 
framework  design  Fortunately  developments  in  human-computer  interaction  HCI 
research can help meet these challenges 
Text  entry  on  handheld  devices  requires  a  different  approach  to  keyboard  design 
and layout since such devices are limited by their size Mobile phones are the  most 
notable  examples  With  only  twelve  numeric  keys  even  Latin  alphabets  have  to  be 
re-mapped  Fitts   Law  17  which  is  one  of  the  fundamental  principles  of  HCI 
research determines the cost of movements and is usually used to evaluate solutions 
in this domain It measures the efficiency of an interface given that users are familiar 
A great deal of research in the usability of different text entry methods is based on 
distance  MSD  or  other  related  metrics  18  Input  methods  like  T9  19  or 
LetterWise 20 are more successful than MultiTap as they have achieved a balance 
between  the  number  of  keystrokes  and  the  collision  rate  of  keystroke-character 
conversion  Many  users  of  Traditional  Chinese  are  familiar  with  Hsus  keyboard 
layout  ref  which  maps  Chinese  bo-po-mo-fo  symbols  to  26  keys  according  to 
phonetic  rules  and  shape  similarity  It  is  more  efficient  than  any  traditional  42-key 
layout 
For  many  European  users  there  are  two  ways  to  type  characters  with  diacritic 
marks  They  can  either  use  a  language-specific  keyboard  or  labor  with  a  set  of 
key-combinations  that  usually  involves  the  use  of  CTRL  or  ALT  keys  These  key 
combinations  are  often  called  the  dead  keys  as  they  are  fixed  and  have  to  be 
learned Given the size limitation of some devices such as mobile phones the use of 
dead  keys  are  obviously  impractical  During  the  text  entry  process  a  sequence  of 
keystrokes will probably map to multiple characters phrases or candidates A user 
must then pick the exact characterphrase that he or she wants from a list of  possible 
choices Such interaction requires that candidate charactersphrases be displayed on a 
screen 
 before a choice can be made Such a special purpose 
UI  widget  is  indispensable  for  Asian  language  text  entry  However  it  can  have 
applications  other  than  picking  a  proper  character  In  fact  it  can  serve  both  as  an 
on-the-fly  spelling  checker  for  many  European  languages  and  as  an  alternative  to 
dead keys an example is to have a choice between  la  and  l  when one types  la  
In  other  words  a  candidate  list  is  a  context-sensitive  UI  widget  for  any  type  of  text 
service  Such  text-parsing  modules  have  many  practical  uses  For  example  a 
dictionarythesaurus agent 9 can offer people writing aides 
On the Development of Text Input Method                              - Lessons Learned      5 
Fig 3 A WordNet input method module as a thesaurus agent 
The  design  of  most  text  entry  methods  in  handheld  devices  is  based  on  the  same 
concept of context-sensitive UI widgets Many designs are now available that use UI 
widgets to show candidates A pie menu 21 has proved to be better UI then a linear 
menu  but  only  a  few  PDA  devices  have  implemented  it  so  far  This  is  due  to  the 
difficulty of developing a round widget in most GUI environments and the lack of a 
pointer device such as a mouse or a pen Difficulty also arise when such widgets are 
deployed on desktop systems as users using keyboards may not like to take an extra 
step to use a mouse to click on a pie menu The GOING team has developed a matrix 
style  widget  that  displays  a  hierarchical  candidate  list  so  that  users  can  choose 
Chinese words with alphabets rather than numbers on the forth row of the keyboard 
This approach considers both UI widget design and finger movement costs and only 
uses  half  of  the  alphabets  on  the  left  side  of  an  English  keyboard  An  example  of 
GOINGs matrix widget is shown in figure 4 
Fig 4 The second-level candidate windows of GOING 
When designing a more accessible interface for elderly or disabled people simpler 
movement  should  be  more  important  than  faster  typing  The  Dasher  22  and  the 
Minimal Device Independent Text Input Method MDITIM 23 are two examples of 
such devices As mentioned in the previous section Wang and Mankoffs architecture 
15 which provides a model for low bandwidth devices is also useful for designing 
interfaces  The  model  is  based  on  Shannons  noisy  channel  model  ref  which  has 
been widely adopted in language modeling In addition both Dasher and T9 also used 
simplified  uni-gram  language  models  Clearly  more  natural  language  processing 
NLP techniques are being utilized in HCI research into to design various methods of 
text entry which is discussed in the next section 
How Natural Language Processing Can Enhance Text Entry 
In this section we discuss how advances in natural language processing can help the 
development  of  better  text  entry  systems  and  how  such  development  in  turn  affects 
the direction of NLP research 
The  semantic  template  matching  approach  used  in  GOING  has  achieved  95 
accuracy  However  the  approach  is  labor-intensive  The  GOING  team  have  studied 
different  language  modeling  techniques  and  attempted  to  integrate  known  semantic 
templates with GOING in order to take advantage of a number of strategies 
As  a  syllable-to-word  conversion  mechanism  an  IM  can  be  seen  as  the  last 
component of automatic speech recognition ASR systems that use an n-gram model 
to  predict  appropriate  words  for  input  keystrokes  For  example  Microsoft  Pinyin 
MSPY   24 and New Zhuyin  are based on a unified language 
On the Development of Text Input Method                              - Lessons Learned      6 
model  in  tri-gram  and  both  perform  well  25  Such  models  however  are  usually 
quite involved in terms of time and space complexity Often a simpler solution can be 
considered For example T9 19 only adopts a uni-gram model with a smaller set of 
lexicons A recent work on Chinese frequent strings 26 showed that it is possible to 
extract frequent patterns using common information retrieval techniques such as the 
Pat-tree algorithm and then adjust the pattern frequencies to fit the uni-gram model 
SCIMs  Smart  Pinyin    employs  a  similar  approach  except  that  it  also 
implements  some  heuristic  rules  of  known  patterns  Chewing    27  which 
maps bo-po-mo-fo sequences to Chinese characters by matching the longest path in a 
suffix tree of the directory can be reprogrammed to use a uni-gram model 
For an IM to adapt to or learn the behavior of different users online learning is 
necessary  MSPY  collects  character-based  tri-grams  to  adjust  its  original  model 
whereas  Chewing  updates  its  suffix  tree  with  an  external  hash  table  The  concept 
behind  these  adaptation  mechanisms  is  the  cache-based  language  modeling  strategy 
28 It is similar to the held-out training method 29 On the other hand the adaptive 
learning 30 approach which is based on a Bayesian classification is often used for 
more sophisticated mechanisms with cached texts This is also relevant to other areas 
of research such as speaker adaptation in the ASR system 31 
In  IM  research  one  of  the  most  important  issues  is  wordphrase  identification 
which  is  not  easy  in  any  domain  or  language  A  known  set  of  syntactic  rules 
implemented  using  LISP  has  helped  Japanese  IM  modules  detect  word  boundaries 
and forms 32 Since the Chinese language lacks similar deterministic rules Chinese 
IMs  must  depend  more  on  contextual  information  To  deal  with  the  ambiguity  of 
Chinese  word  boundaries  in  language  modeling  iterative  training  procedures  25 
put language back into language modeling 33 many researchers have attempted to 
combine  statistical  models  and  linguistic  knowledge  especially  for  long  distance 
linguistic  constraints  For  example  both  the  trigger  pair  34  and  meaningful  word 
pair  35  approaches  try  to  increase  the  weights  of  co-occurring  grams  in  language 
models  Rosenfelds  survey  33  on  the  other  hand  has  covered  latent  semantic 
analysis link grammar dependency grammar and probabilistic context free grammar 
These  methods  are  used  to  build  semantic  and  syntactic  knowledge  into  language 
models  Models  such  as  maximum  entropy  30  and  conditional  random  field  36 
currently  considered  the  state-of-the-art  combine  all  of  the  above  techniques  into  a 
unified language model 
It  is  conceivable  that  the  more  complex  a  model  is  the  better  accuracy  can  be 
achieved  likely  at  the  expense  of  extraordinary  computational  costs  For  most  IM 
implementations  which  are  expected  to  be  lightweight  and  highly  responsive  these 
models  may  not  be practical from  an  engineering  point  of  view  In  the  next  section 
we propose several possible solutions to this problem 
Directions for Future Research and Development 
Many  Chinese  words  are  single  characters  which  create  a  lot  of  difficulty  in  the 
identification  of  unknown  words  and  unseen  events  in  language  modeling  For  the 
On the Development of Text Input Method                              - Lessons Learned      7 
latter  problem  Chen-Goodman  modified  Kneser-Ney  29  and  other  smoothing 
techniques  have  been  proved  useful  in  Western  languages  Yet  they  usually  fail  in 
oriental  languages  because  segmented  training  corpus  could  often  combine  these 
single character  words into  multiple character  words there is no consistent standard 
for  Chinese  word  segmentation 1   The  situation  can  be  even  worse  in  the 
syllable-to-word conversion employed by Chinese IMs as multiple homonyms can be 
represented  alone  or  within  other  lexicons  under  certain  morphological  rules  For 
example  in  some  phonetic-based 
intelligent   IMs  the  syllables  yi  yang4   are 
automatically converted into    whereas    is expected This problem is not 
only  affected  by  the  tone  features  of  the  Chinese  language  but  also  by  word 
boundaries  In  an  attempt  to  resolve  this  problem  the  GOING  team  used  Chen  and 
-Ney  smoothing  technique  with  word  pairs  interpolated 
35  With  the  help  of  meaningful  word  pairs     is  picked  only  if    
followed This is less complicated than the above-mentioned approaches Preliminary 
results demonstrate that the syllable-to-word conversion accuracy is improved 35 
Furthermore  the  GOING  team  is  experimenting  with  encoding  word  pairs  and 
semantic  templates  into  language  models  based  on  Bayesian  prior  probabilities  as 
suggested by Rosenfeld 33 The computational cost is expected to be less than that 
of  exponential  models  or  linear  discriminant  models  37  To  accomplish  this  a 
mathematical model compatible with n-grams and long-distance Bayesian priors must 
be developed Our experience in information retrieval research 38 has shown that a 
hybrid system of Bayesian inference network and language model like Lemur 39 is 
a good starting point This concept can be applied to language models for IMs as well 
as to online and offline incremental learning mechanisms 
We  have  integrated  various  ideas  from  related  research  and  applications  of 
network  systems  To  follow 
the  Open-Closed  Principle  more  closely  an 
implementation  that  embeds  tiny  HTTP daemons  httpd  into  the  IM  platform  could 
be a promising solution Meanwhile to avoid the problem in response latency in most 
thin client architectures an elegant caching mechanism similar to the one used in the 
language  model  but  closer  to  the  hardware  architecture  design  including  instruction 
caching  may  be  useful  If  such  a  platform  were  to  be  implemented  writing  IMs  in 
different programming languages other than CC would no longer be difficult just 
as http has enabled other languages to be used in web applications This roadmap also 
suggests  plausible  HCI  studies  including  making  good  UI  ubiquitous  and  reducing 
design  constraints  through  the  integration  of  web  browsers  such  as  JavaScript 
XMLHttpRequest  or  even  Flash  applets  The  OpenVanilla  teams  prototype  is  an 
example of such a development as shown in figure 
                                                           
documents httpsighancsuchicagoedubakeoff2005 
On the Development of Text Input Method                              - Lessons Learned      8 
Fig 5 A Web IM bookmarklet 
Since  GOING  has  introduced  a  two-level  candidate  window  with  a  matrix  in  the 
second level we shall try to apply both Hicks law 40 and Accot-
41 The former describes the time it takes for a user to make a decision as a function 
of  the  possible  choices  the  latter  predicts  a  users  performance  in  navigating  a 
hierarchical  cascading  menu  Menus  or  candidate  lists  are  not  the  only  UI  widgets 
used  in  IM  design  Status  windows  or  other  widget  forms  can  also  be  useful 
According  to  a  Microsoft  technical  report  13  even  in  the  East  Asian  region 
different  languages  Japanese  Korean  Chinese  employ  different  UI  schemes  ie 
different combinations of status window or text buffer window called a composition 
window  by  Microsoft  It  is  funny  that  even  Traditional  Chinese  and  Simplified 
Chinese  IMs  employ  different  schemes  To  explain  why  different  languages  use 
different  schemes  one  may  point  to  differences  in  language  and  culture  but  this 
subject  requires  further  investigation  We  should  also  consider  the  traits  common  to 
East Asian languages 
Conclusion 
In this paper we have covered three major aspects of IM design and implementation 
namely  software  engineering  human-computer  interaction  and  natural  language 
processing  Various  design  concepts  such  as  Lees  NGASR  42  Changs  Open 
Machine  Translation  community  43  and  the  OpenVanilla  platform  could  help 
researchers and engineers evaluate their work for real world applications Ultimately 
such research will create more efficient text entry methods for the users 
References 
1  Chang  J  S  Chen  S  D  Chen  C  D  Conversion  of  Phonemic-input  to  Chinese  Text 
through  Constraint  Satisfaction  Proceedings  of  1991  International  Conference  on 
Computer Processing of Chinese and Oriental Languages 1991 30 36 
2  Kuo  J  J  Phonetic-Input-to-Character  Conversion  System  for  Chinese  Using  Syntactic 
Connection  Table  and  Semantic  Distance  Computer  Processing  of  Chinese    Oriental 
Languages Vol 10 No 2 1996 195 210 
On the Development of Text Input Method                              - Lessons Learned      9 
3  Hsu  W  L  Chinese  parsing  in  a  phoneme-to-character  conversion  system  based  on 
semantic pattern matching International Journal on Computer Processing of Chinese and 
Oriental Languages Vol 40 1995 227 236 
4  Tatuoka H LIPS K K An Input System for Vietnamese Language Text Proceedings of 
1994 International Conference on Computer Processing of Chinese and Oriental Languages 
1994 37 44 
5  Zhang  X  AllBalanced  A  Web-Based  Chinese  Character  Input  System  to  Meet  Hong 
Kongs Needs Proceedings of 2001 International Conference on Computer Processing of 
Chinese and Oriental Languages 2001 333-338 
6  Hensch K Igi T Iwao M Oda A Takeshita T IBM History of Far Eastern Languages in 
Computing IEEE Annals of the History of Computing Vol 27 No 1 2005 17 55 
7  MasahikoN Hideki H The Input Method Protocol X Consortium Standard for X11 r63 
1994 
8  Martin R C The open-closed principle C Report Vol8 1996 
9  Chiang T C Liu D Liu K M Yang W Z Tan P T Hsieh M J Chang T H Hsu 
W  L  OpenVanilla  -  A  Non-Intrusive  Plug-In  Framework  of  Text  Services 
httparxivorgpdfcsHC0508042 2005 
10  Su Z Smart Common Input Method httpwwwscim-imorg 
11  Isokoski P Raisamo R Architecture for Personal Text Entry Methods Closing the Gap 
Software Engineering and Human-Computer Interaction IFIP 2003 1 8 
Methods 
Microsystems 
12  Sun 
Framework 
httpjavasuncomj2se14docsguideimf 2003 
13  Rolfe  R  What  is  an  IME  Input  Method  Editor  and  how  do  I  use  it  Microsoft 
httpwwwmicrosoftcomglobaldevhandsonuserIMEPapermspxjpnime 2003 
14  Hiura  H  InternetIntranet  Input  Method  Architecture  Sun  Microsystems  Inc 
httpwwwli18nuxorgsubgroupsimIIIMFwhitepaperwhitepaperhtml 1999 
15  Wang  J  Mankoff  J  Theoretical  and  architectural  support  for  input  device  adaptation 
Proceedings of the 2003 Conference on Universal Usability 2003 85 92 
16  Kida et al Text services manager United States Patent 1997 5659769 
17  Fitts P  and Peterson  J  Information  Capacity  of  Discrete  Motor  Responses  Journal  of 
Experimental Psychology Vol 67 1964 103-112 
18  Soukoreff R W MacKenzie I S Metrics for text entry research an evaluation of MSD 
and  KSPC  and  a  new  unified  error  metric  Proceedings  of  the  SIGCHI  Conference  on 
Human Factors in Computing Systems 2003 113-120 
19  James  C  and  Long  M  Bringing  text  input  beyond  the  desktop  CHI  00  Extended 
Abstracts on Human Factors in Computing Systems 2000 49-50 
20  MacKenzie  I  S  Kober  H  Smith  D  Jones  T  Skepner  E  LetterWise  prefix-based 
disambiguation for mobile text input Proceedings of the 14th Annual ACM Symposium on 
User interface Software and Technology 2001 111-120 
21  Callahan J Hopkins D Weiser M Shneiderman B An empirical comparison of pie vs 
linear  menus  Proceedings  of  the  SIGCHI  Conference  on  Human  Factors  in  Computing 
Systems 1988 95-100 
22  Ward  D  J  Blackwell  A  F  MacKay  D  J  Dasher
a  data  entry  interface  using 
continuous  gestures  and  language  models  Proceedings  of  the  13th  Annual  ACM 
Symposium on User interface Software and Technology 2000 129-137 
23  Isokoski  P  Raisamo  R  Device  independent  text  input  a  rationale  and  an  example 
Proceedings of the Working Conference on Advanced Visual Interfaces 2000 76-83 
24  Chen Z Lee K F A new statistical approach to Chinese pinyin input The 38th Annual 
Meeting of the Association for Computational Linguistics 2000 
25  Gao  J  F  Wang  H  F  Li  M  J  Lee  K  F  A  unified  approach  to  statistical  language 
modeling for Chinese ICASSP2000 2000 
On the Development of Text Input Method                              - Lessons Learned      10 
26  Lin Y J Yu M S The Properties and Further Applications of Chinese Frequent Strings 
International Journal of Computational Linguistics  Chinese Language Processing Vol 9 
No 1 2004 113-128 
27  Kung  L  C  Chen  K  P  Technical  Report  on  Chewing 
Input  Method 
httpchewingcsienetdocchewing-reportpdf 2002 
28  Kuhn R de Mori R A Cache-Based Natural Language Model for Speech Recognition 
IEEE Transactions on Pattern Analysis  and Machine Intelligence Vol 12 No 6 1990 
570 583 
29  Chen  S  F  Goodman  J  An  Empirical  Study  of  Smoothing  Techniques  for  Language 
Modeling  Proceedings  of  the  34th  conference  on  Association  for  Computational 
Linguistics 1996 310-318 
30  Rosenfeld  R  A  maximum  entropy  approach  to  adaptive  statistical  language  modelling 
Computer Speech and Language Vol 10 No 3 1996 187-228 
31  Digalakis  V  Neumeyer  L  Speaker  Adaptation  Using  Combined  Transformation  and 
Bayesian  Methods  IEEE  International  Conference  on  Acoustics  Speech  and  Signal 
Processing Vol 1 1995 
32  Sato M SKK Simple Kana to Kanji conversion program httpopenlabjpskk 1987 
33  Rosenfeld R Two decades of statistical language modeling where do we go from here 
Proceedings of the IEEE 2000 
34  Lau R Rosenfeld R and Roukos S Trigger-based language models a maximum entropy 
approach  1993  IEEE  International  Conference  on  Acoustics  Speech  and  Signal 
Processing Vol 2 1993 45-48 
35  Tsai  J  L  Chiang  T  J  Hsu  W  L  Applying  Meaningful  Word-Pair  Identifier  to  the 
Chinese Syllable-to-Word Conversion Problem Proceedings of ROCLING2004 2004 
36  Lafferty J McCallum A Pereira F Conditional Random Fields Probabilistic Models for 
Segmenting and Labeling Sequence Data Proceedings for 18th International Conference on 
Machine Learning 2001 
37  Gao  J  F  Qi  H  L  Xia  X  S  Nie  J  Y  Linear  Discriminant  Model  for  Information 
Retrieval The 28th Annual International ACM SIGIR Conference 2005 
38  Lee C W Shih C W Day M Y Tsai T H Jiang T J Wu J W Sung C L Chen Y 
R  Wu  S  H  Hsu  W  L  ASQA  Academia  Sinica  Question  Answering  System  for 
NTCIR-5 CLQA Proceedings of NTCIR-5 Workshop 2005 202-208 
39  Metzler D Croft W B Combining the language model and inference network approaches 
to retrieval Information Processing and Management an International Journal Vol 40 No 
5 2004 735-750 
40  Hick  W  E  On  the  rate  of  gain  of  information  Quarterly  Journal  of  Experimental 
Psychology Vol 4 1952 11-26 
41  Accot J Zhai S Beyond Fitts law models for trajectory-based HCI tasks Proceedings of 
the SIGCHI Conference on Human Factors in Computing Systems 1997 295-302 
42  Lee  L  S  et  al  A  Study  on  the  Next-Generation  Automatic  Speech  Recognition 
httpdianaeenthuedutw 
43  Chang J S    20 Free Software Brings Forth the Next Wave of 
Machine Translation Scientific American Taiwanese Edition Vol 4 2006 
