Stemmers for Tamil Language 
Performance Analysis 
MThangarasu 
MPhil Scholar Full Time 
Department of Computer Science and Application 
KSRangasamy College of Arts and Science 
Tiruchengode India 
E-mailthangarasumathangmailcom 
DrRManavalan 
Department of Computer Science and Application 
KSRangasamy College of Arts and Science 
Tiruchengode India 
E-mail manavalanrrediffmailcom 
Abstract Stemming is the process of extracting root word from the given inflection word and also 
plays significant role in numerous application of Natural Language Processing NLP Tamil Language 
raises several challenges to NLP since it has rich morphological patterns than other languages The rule 
based approach light-stemmer is proposed in this paper to find stem word for given inflection Tamil 
word  The  performance  of  proposed  approach  is  compared  to  a  rule  based  suffix  removal  stemmer 
based on correctly and incorrectly predicted The experimental result clearly show that the proposed 
approach light stemmer for Tamil language perform better than suffix removal stemmer and also more 
effective in Information Retrieval System IRS 
Keywords- Tamil morphology Tamil stemmer Light stemmer Rule-based stemmer NLP Natural Language 
Processing 
INTRODUCTION 
Tamil is a Dravidian language It is the regional language of Tamil Nadu of India It has number of 
morphological variant for a word For example  a male who has read a male who is reading 
now  a male who will read a male who will not read This creates more complexity in 
information  retrieval  Stemmer  is  especially  used  in  Information  Retrieval  System  IRS  for  improving  their 
performance at the mean time reduce the complexity for example when a user enter query word search  
user most likely wants to retrieve documents containing the terms searching  and searched  etc as 
well Thus using stemmer improves recall ie the number of documents retrieved in response to a query since 
many terms are mapped to one The benefit of Stemmer is decreases the size of the index files in the IR system 
Consequently many stemmers algorithm have been proposed and evaluated for various Indian languages such as 
Hindi 1 Gujarati 2 and Punjabi 3 etc An overview of the proposed model projected in Figure 1 
Figure1 Overview of Proposed Model for Tamil Stemmer Algorithms 
The proposed light stemmer algorithm compared with rule based suffix removal algorithmThis paper 
organized  as  follows  Section  II  describes  the  related  work  Section  III  discusses  about  the  Tamil  language 
Section IV presents the proposed system light stemmer and also describes a rule based suffix removal stemmer 
Section V and VI contains an experimental analysis and conclusion of the work respectively 
RELATED WORK 
Earlier Stemmer was primarily developed for English but later due to the corpus growth of languages 
other than English there was an increased demand from the research community to develop stemmers for other 
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 902languages too In case in Indian languages the earliest work reported by Ramanathan and Rao 1 2003 to 
perform longest match stripping for building a Hindi stemmer Juhi Ameta et al developed a light stemmer for 
Gujarati language 2 in 2011 for removing inflectional and derivational endings in order to reduce word forms 
to common stem Slowly investigation starts for other language such as Bengali 4 Urdu 5 Malayalam 6 
and Punjabi 3 are also carried out However in this section express research experience in developing Tamil 
stemmers 
The most common approaches used for developing stemmers are Brute force and Affix strip Among 
all the existing approaches this research tries to implement a light stemmer for Tamil for inherent to develop a 
stemmer algorithm in an easier and faster way 
TAMIL LANGUAGE 
Tamil is a Dravidian language spoken predominantly by Tamil people of Indian subcontinent Tamil 
words typically have more morphological patterns than English words Tamil word contains constituent parts a 
stem which can be thought of as responsible for the nuclear meaning of verb attached to which may be zero or 
more derivational prefix and zero or one suffix which together to form a word Tamil is a morphologically rich 
language resulting in its relatively high inflectional forms Normally most of the Tamil words have more than 
one  morphologically  suffixes  The  number  of  suffix  is  ranging  from  3  to  13  The  description  with  example 
nouns compound nouns and verbs are given in the following sequel 
A Noun 
Tamil  has  an  extensive  case  system  Root  nouns  can  assume  eight  different  morphological  shapes 
depending  on  their  roles  in  a  sentence  Singular  and  plural  forms  are  also  distinguished  through  inflections 
Suffixes are attached to stem word of the noun Table I shows example for different stem noun 
Singular 
Oblique stem 
Nominative stem 
Accusative stem 
Dative stem 
Sociative stem  
Genitive stem 
Instrumental stem 
Locative stem 
Ablative stem 
Vocative stem 
Plural 
Oblique stem 
Nominative stem 
Accusative stem 
Dative stem 
Sociative stem 
Genitive stem 
Instrumental stem 
Locative stem 
Ablative stem 
Vocative stem 
TABLE I NOUN 
PeNgirl
PeN- 
PeN 
PeN-ai 
PeN-ukku 
PeN-odu 
PeN-udaiya 
PeNaal 
PeN-idam 
maramtree
maram - 
maram 
maram -ai 
maram -ukku 
maram -odu 
maram -udaiya 
maram -aal 
maram -marath 
PeNidamirunthu 
maram -ilirunthu 
PeN-e 
PeNgaL girls 
PeNgaL- 
PeNgaL 
maram -e 
marangal trees 
marangal- 
marangal 
PeNgaL-ai 
marangal-ai 
PeNgaL-ukku 
marangal-ukku 
PeNgaL-odu 
marangal-odu 
PeNgaL-udaiya 
marangal-udaiya 
PeNgaL-aal 
marangal-aal 
PeNgaL-idam 
marangal-il 
PeNgaL- 
idamirunthu 
PeNgaL-e 
marangal-ilirunthu 
marangal-e 
 gaL is added to the singular form of nouns to make them plural  
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 903B Compound Nouns 
         Nouns are also occurring in various compound forms as well It can be made up of several units where 
each  unit  expresses  a  particular  grammatical  meaning  The  Tamil  noun  pAdikkoNdurunhthavanai 
  which  translates  as  the  male  who  was  singing  gives  information  on  tense  number 
gender  person  and  case  This  noun  is  actually  derived  from  the  full  non-infinite  verb  pAdikkoNdu 
 which means singing In English deriving nouns from verbs is seen too The full finite verb 
sing  for  instance  could  be  changed  into  a  noun  by  adding  the  suffix  er  to  its  stem  so  that  it  becomes 
singer But while Tamil is an agglutinating language English is not 
C Verbs  
Tamil verbs may be main or auxiliary They also exist in finite and non-finite forms just as in English 
Tamil finite verbs however give much more grammatical information than English finite verbs do in that they 
mark mood tense number person gender case etc In the Table II below can observe the different finite 
morphological construction for the verb padi study 
TABLE II VERBS 
padi-  ththEn  
ththAi 
Padi- 
  
Padi- ththaan  
Present  
Future  
Padi- kkiREn 
Padi- ppEn 
Future-Neg 
Padi- 
kkamaattEn  
Padi- kkiRaai 
Padi- ppaai 
Padi- 
kkiRaan 
Padi- ppaan 
Padi-ththaaL  
Padi- kkiRaaL 
Padi- papal 
Padi- ththaar    Padi- kkiRaar 
Padi- ppaar 
Padi- ththathu  
Padi- kkiRathu 
Padi- kkum 
Padi- kkamataai 
Padi- 
kkamaattaan 
Padi- 
kkamaattaaL 
Padi- 
kkamaatdaar 
Padi- kkaathu 
I singular 
II singular 
singular 
III singular 
female 
singular 
singular 
I plural 
II plural 
III plural an 
Padi- tthOm  
Padi- 
kkiROm 
Padi- 
pPOm 
Padi- kkamaatTOm  
  
Padi-ththIrkaL 
 
Padi-ththaarkaL 
  
Padi- 
kkiRIrkaL 
Padi- 
ppIRkaL 
Padi- 
kkiRaarkaL 
Padi- 
ppaarKaL 
Padi-- 
kkamaattaarkaL 
Padi- 
kkamaattaarkaL 
III plural inan 
Padi-ththana 
Padi- 
kkinRana 
Padi- kkum 
Padi- kkaathu 
non-future negative padi-kkavillai all persons numbers and genders   
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 904Conjunctive 
Infinitive  
TABLE III NON-FINITE VERB 
Padi-thu     
Padi-kka  
Neg verbal participle 
Padi-kkaamal  
Conditional 
Padi-thaal 
Neg conditional 
Padi-kkaanittaal  
Negrelative participle 
Padi-kkaatha  
Neg verbal noun 
Deverbal nouns 
Padi-kkaathathu 
  
Padi-thal padi-ppu  padi-kkai  
IV STEMMERS FOR TAMIL LANGUAGE 
Stemming  is  the  process  of  extracting  root  word  from  the  given  text  Without  performing  complete 
morphological analysis it is also reduces the total number of distinct index entries Richness of morphology in 
Tamil language is major issue for creating right stemmer To address of this issue light stemmer is proposed 
and  performance  compared  to  rule  based  suffix  stripping  stemmer  The  detailed  description  of  two  stemmer 
approaches  for  Tamil  language  such  as  rule  based  suffix  removal  stemmer  and  light  stemmer  are  discussed 
following sequel  
A Rule based suffix stripping stemmer algorithm 
Rule based suffix stripping stemmer algorithm truncate suffix of Tamil inflectional word based on the 
rules  That  convert  inflectional  Tamil  word  into  stemmed  Tamil  word  36Rule  based  suffix  stripping 
stemmer Algorithm for Tamil Language is presented in Figure 2 
Rule based suffix stripping stemmer Algorithm for Tamil Language 
Input      List of Tamil words 
Output  StemmedRoot words 
Step1  Eliminate the entire complex plural  Eg      
                              
Step2  Eliminate the join word suffixes Eg     
                             
             A  Eliminate    
                   
             B  Eliminate  
                             
Step 3  According to the identified suffix the next possible suffix list is generated using rules
Figure 2 A Rule Based Suffix Stripping Algorithm for Tamil Language 
B Light Stemmer 
The  rule  based  suffix  stripping  stemmer  algorithm  give  infinite  verb  for  some  Tamil  words  Light 
stemmer  is  proposed  to  address  above  issue Light  stemmer  is  also kind  of rule based  stemmer  It  works by 
truncating all possible suffixes form and produce finite verb Light stemming is used to find the representative 
indexing  form  of  given  word  by  the  application  of  truncation  of  suffixes  10  The  core  objective  of  light 
stemmer is to preserve the word meaning intact and so increases the retrieval performance of an IR system A 
Light Stemmer Algorithm for Tamil Language is projected in Figure 3 
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 905Light stemmer Algorithm for Tamil Language 
Input      List of Tamil words 
Output  StemmedRoot words 
Step 1  Eliminate the entire complex plural   
Step 2  After the plural word is converted into singular word during the iteration the word is also checked for  
             adjective if it is found then its equivalent verb is substituted Example the term diya in  
             Odiya will be changed to du and the word is changed to Oodu 
Step 3  After the adjectives are converted to main word the tenses are eliminated such that Paadiya  
             Paadukinra and Paadum will be changed to Paadu 
Step 4  According to the identified suffix the next possible suffix list is generated 
Step 5  The Light algorithms are used for plural to singular conversion and for adjective and tense words to 
main verbs conversion 
Figure 3  A Light Stemmer Algorithm for Tamil Language 
 EXPERIMENTAL ANALYSIS 
The  goal  of  experimental  analysis  is  to  calculate  the  accuracy  of  the  proposed  stemmer  system  can 
achieve  Parameters  that  can  be  used  for  evaluating  Tamil  stemmer  algorithm  in  this  proposed  model  is 
stemmers comparison performance and correctness of the stems produced by it  The detailed description of 
dataset used for experiment and analysis of experiment results and their discussions are under here 
A Dataset 
Two test dataset are considered for evaluating the proposed algorithm The test dataset I has 700 words 
which  are  collected  from  Tamil  corpus  Central  Institute  of  Indian  Language  Test  dataset  2  contains  1600 
words constructed from the internet The stem for these words have been defined manually The training dataset 
consists of 3000 words taken from Tamil corpus Table IV summarizes the details of training and test datasets 
TABLE IV DATA SET GENERATION 
Data set 
Total Number of Words 
Training Dataset 
Test Dataset I 
Test Dataset II 
Total Number of Unique 
Minimum Length of the 
Maximum Length of the 
B The Experiment Results and Discussion 
The experiment analyzed over two datasets in order to evaluate the performance of proposed algorithm 
The accuracy is a parameter it is used to evaluate the efficiency of the proposed Tamil stemmer algorithm over 
a rule based suffix stripping stemmer The accuracy is defined in this proposed stemmer based on number of 
words stemmed correctly The Table V shows the computational results of a rule based suffix stripping and light 
stemmer based on suffix rule generation Table VI average result is generated from the Table V  From the Table 
VI  the  maximum  accuracy  of  rule  based  suffix  stripping  stemmer  is  8432  where  as  8673  maximum 
accuracy produced by light stemmer for the test dataset I light stemmer achieves accuracy 241 more than the 
rule based suffix stripping stemmer The accuracy of rule based suffix stripping stemmer in test dataset II is 
784  and  light  stemmer  accuracy  is  7983  In  the  dataset  II  143  more  accuracy  achieved  by  the  light 
stemmer it is more than the rule based suffix stripping stemmer accuracy 
Accuracy is calculated from the equation 1 It is based on the Number of Words Stemmed correctly 
given by the Tamil Stemmer algorithms and number of unique words in the given datasets 
Accuracy  Number of Correctly Stemmed words  Number of Unique words100          1 
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 906Dataset 
Dataset I 
Dataset II 
Number of Words 
Data Set 
Data Set I 
Data Set II 
Average 
TABLE V TEST DATA 
Number of Unique 
Number of Correctly 
Stemmed Word 
Accuracy 
Rule Based 
suffix Stripping 
algorithm 
Stemmer 
algorithm 
TABLE VI AVERAGE RESULTS 
Accuracy 
A Rule Based Suffix Stripping Stemmer 
A light Stemmer 
8432 
8136 
8673 
7983 
8328 
               The experiment is conducted over the dataset result of different accuracy ie A1A2 achieved by 
both  rule  based  suffix  stripping  and  light  stemmer  algorithm  with  required  statistical  parameters  and  their 
average result is shown in Table V The performance analysis chart is presented among various parameters in 
Figure 4 The computational results clearly explain that the light stemmer algorithm is performing better than 
the rule based suffix stripping algorithm 
SuffixStrippingAlgorithm
LightStemmerAlgorithm
A1 A2 A3 A4 A5 A6 A7 A8 A9 A10A11
Figure 4 Performance Analyses for Tamil Stemmer Algorithms 
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 907VI 
CONCLUSION 
Morphologically Tamil is a complex language since it has a number of variants in for a single word 
Tamil  language  is  rich  in  both  inflectional  and  derivational  morphologies  In  this  paper  a  light  stemmer  for 
Tamil text is proposed to handle inflectional morphology word This stemmer removes suffixes from a word to 
get stem word From the computational result it is prove   light stemmer approach is more suitable stemmer for 
Tamil language compare to a rule based suffix stripping stemmer  
REFERENCES 
1  ARamanathan and DRao A Lightweight Stemmer for Hindi   in proceedings of the 10th  Conference of the European Chapter of 
the  Association  for  Computational  LinguisticsEACL  on  Computational  linguistics  for  South  Asian  Language  Budapest  April 
workshop 2003    
Juhi  Ameta  Nisheeth  Joshi  and  Iti  Mathur  2011 A  Lightweight  Stemmer  for  Gujarati  46th  Annual  National  Convention  of 
Computer Society of India Organized by Computer Society of India Gujarat Chapter Sponsored by Computer Society of India and 
Department of Science and Technology Govt of Gujarat and IEEE Gujarat Section   
3  Punjabi Language Stemmer for nouns and proper names by Vishal Gupta Gurpreet Singh Lehal Proceedings of the 2nd Workshop 
on  South  and  Southeast  Asian  Natural  Language  Processing  WSSANLP  IJCNLP  2011    pages  3539Chiang  Mai  Thailand 
November 8 2011 
4  Khan  2007  A  light  weight  stemmer  for  Bengali  and  its  Use  in  spelling  Checker  Proc  1st  Intl  Conf  on  Digital  Comm  and 
Computer Applications DCCA07 Irbid Jordan March 19-23 
5  A Light Weight Stemmer for Urdu Language A Scarce Resourced Language Sajjad Ahmad Khan1 Waqas Anwar1 Usama Ijaz 
Bajwa1 Xuan Wang Proceedings of the 3rd Workshop on South and Southeast Asian Natural Language Processing SANLP pages 
6978COLING 2012 Mumbai December 2012 
6  Mudassar  M  Majgaonker  et  al  Discovering  suffixes  A  Case  Study  for  Marathi  Language  IJCSE  International  Journal  on 
Computer Science and Engineering Vol 02 No 08 2010 2716-2720  
7  Malayalam Stemmer - Computational Linguistic Research Group nlpau-kbcorgMalayalamStemmerFinalpdf  
8  Madhavi  Ganapathiraju  and  Levin  Lori  TelMore  Morphological  Generator  for  Telugu  Nouns  and  verbs  In  the  proceedings  of 
Second International Conference on Universal Digital Library Alexandria Egypt November 17-19 2006 
9  D Freitag Morphology induction from term clusters In Proceedings of the ninth conference on computational natural language 
learning CoNLL pp 128135 2005 
10  Imed Al-Sughaiyer Ibrahim Al-Kharashi 2004 Arabic morphological analysis techniques a comprehensive survey Journal of the 
American Society for Information Science and Technology 553189  213 
11  MF Porter 1980 An algorithm for suffix stripping Program 143130137 
12  Rajendran S Arulmozi S Ramesh Kumar Viswanathan S 2001 Computational morphology of verbal complex Paper read in 
Conference at Dravidan University Kuppam December 26-29 2001 
AUTHORS PROFILE 
MThangarasu received Master of Computer Application degree from Bharathiar University He purses MPhil 
under  supervision  of  DrRManavalan  His  area  of  interest  is  data  mining  and  Natural  Processing  Language 
NLP 
Dr  R  Manavalan  is  working  as  Assistant  professor  and  Head  in  Department  of  computer  science  and 
Applications He obtained PhD in Computer Science from Periyar University and published numerous research 
papers in international journals and also presented papers in various national and international conferences His 
area of interest is soft computing image processing and analysis Theory of computation 
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 908Stemmers for Tamil Language 
Performance Analysis 
MThangarasu 
MPhil Scholar Full Time 
Department of Computer Science and Application 
KSRangasamy College of Arts and Science 
Tiruchengode India 
E-mailthangarasumathangmailcom 
DrRManavalan 
Department of Computer Science and Application 
KSRangasamy College of Arts and Science 
Tiruchengode India 
E-mail manavalanrrediffmailcom 
Abstract Stemming is the process of extracting root word from the given inflection word and also 
plays significant role in numerous application of Natural Language Processing NLP Tamil Language 
raises several challenges to NLP since it has rich morphological patterns than other languages The rule 
based approach light-stemmer is proposed in this paper to find stem word for given inflection Tamil 
word  The  performance  of  proposed  approach  is  compared  to  a  rule  based  suffix  removal  stemmer 
based on correctly and incorrectly predicted The experimental result clearly show that the proposed 
approach light stemmer for Tamil language perform better than suffix removal stemmer and also more 
effective in Information Retrieval System IRS 
Keywords- Tamil morphology Tamil stemmer Light stemmer Rule-based stemmer NLP Natural Language 
Processing 
INTRODUCTION 
Tamil is a Dravidian language It is the regional language of Tamil Nadu of India It has number of 
morphological variant for a word For example  a male who has read a male who is reading 
now  a male who will read a male who will not read This creates more complexity in 
information  retrieval  Stemmer  is  especially  used  in  Information  Retrieval  System  IRS  for  improving  their 
performance at the mean time reduce the complexity for example when a user enter query word search  
user most likely wants to retrieve documents containing the terms searching  and searched  etc as 
well Thus using stemmer improves recall ie the number of documents retrieved in response to a query since 
many terms are mapped to one The benefit of Stemmer is decreases the size of the index files in the IR system 
Consequently many stemmers algorithm have been proposed and evaluated for various Indian languages such as 
Hindi 1 Gujarati 2 and Punjabi 3 etc An overview of the proposed model projected in Figure 1 
Figure1 Overview of Proposed Model for Tamil Stemmer Algorithms 
The proposed light stemmer algorithm compared with rule based suffix removal algorithmThis paper 
organized  as  follows  Section  II  describes  the  related  work  Section  III  discusses  about  the  Tamil  language 
Section IV presents the proposed system light stemmer and also describes a rule based suffix removal stemmer 
Section V and VI contains an experimental analysis and conclusion of the work respectively 
RELATED WORK 
Earlier Stemmer was primarily developed for English but later due to the corpus growth of languages 
other than English there was an increased demand from the research community to develop stemmers for other 
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 902languages too In case in Indian languages the earliest work reported by Ramanathan and Rao 1 2003 to 
perform longest match stripping for building a Hindi stemmer Juhi Ameta et al developed a light stemmer for 
Gujarati language 2 in 2011 for removing inflectional and derivational endings in order to reduce word forms 
to common stem Slowly investigation starts for other language such as Bengali 4 Urdu 5 Malayalam 6 
and Punjabi 3 are also carried out However in this section express research experience in developing Tamil 
stemmers 
The most common approaches used for developing stemmers are Brute force and Affix strip Among 
all the existing approaches this research tries to implement a light stemmer for Tamil for inherent to develop a 
stemmer algorithm in an easier and faster way 
TAMIL LANGUAGE 
Tamil is a Dravidian language spoken predominantly by Tamil people of Indian subcontinent Tamil 
words typically have more morphological patterns than English words Tamil word contains constituent parts a 
stem which can be thought of as responsible for the nuclear meaning of verb attached to which may be zero or 
more derivational prefix and zero or one suffix which together to form a word Tamil is a morphologically rich 
language resulting in its relatively high inflectional forms Normally most of the Tamil words have more than 
one  morphologically  suffixes  The  number  of  suffix  is  ranging  from  3  to  13  The  description  with  example 
nouns compound nouns and verbs are given in the following sequel 
A Noun 
Tamil  has  an  extensive  case  system  Root  nouns  can  assume  eight  different  morphological  shapes 
depending  on  their  roles  in  a  sentence  Singular  and  plural  forms  are  also  distinguished  through  inflections 
Suffixes are attached to stem word of the noun Table I shows example for different stem noun 
Singular 
Oblique stem 
Nominative stem 
Accusative stem 
Dative stem 
Sociative stem  
Genitive stem 
Instrumental stem 
Locative stem 
Ablative stem 
Vocative stem 
Plural 
Oblique stem 
Nominative stem 
Accusative stem 
Dative stem 
Sociative stem 
Genitive stem 
Instrumental stem 
Locative stem 
Ablative stem 
Vocative stem 
TABLE I NOUN 
PeNgirl
PeN- 
PeN 
PeN-ai 
PeN-ukku 
PeN-odu 
PeN-udaiya 
PeNaal 
PeN-idam 
maramtree
maram - 
maram 
maram -ai 
maram -ukku 
maram -odu 
maram -udaiya 
maram -aal 
maram -marath 
PeNidamirunthu 
maram -ilirunthu 
PeN-e 
PeNgaL girls 
PeNgaL- 
PeNgaL 
maram -e 
marangal trees 
marangal- 
marangal 
PeNgaL-ai 
marangal-ai 
PeNgaL-ukku 
marangal-ukku 
PeNgaL-odu 
marangal-odu 
PeNgaL-udaiya 
marangal-udaiya 
PeNgaL-aal 
marangal-aal 
PeNgaL-idam 
marangal-il 
PeNgaL- 
idamirunthu 
PeNgaL-e 
marangal-ilirunthu 
marangal-e 
 gaL is added to the singular form of nouns to make them plural  
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 903B Compound Nouns 
         Nouns are also occurring in various compound forms as well It can be made up of several units where 
each  unit  expresses  a  particular  grammatical  meaning  The  Tamil  noun  pAdikkoNdurunhthavanai 
  which  translates  as  the  male  who  was  singing  gives  information  on  tense  number 
gender  person  and  case  This  noun  is  actually  derived  from  the  full  non-infinite  verb  pAdikkoNdu 
 which means singing In English deriving nouns from verbs is seen too The full finite verb 
sing  for  instance  could  be  changed  into  a  noun  by  adding  the  suffix  er  to  its  stem  so  that  it  becomes 
singer But while Tamil is an agglutinating language English is not 
C Verbs  
Tamil verbs may be main or auxiliary They also exist in finite and non-finite forms just as in English 
Tamil finite verbs however give much more grammatical information than English finite verbs do in that they 
mark mood tense number person gender case etc In the Table II below can observe the different finite 
morphological construction for the verb padi study 
TABLE II VERBS 
padi-  ththEn  
ththAi 
Padi- 
  
Padi- ththaan  
Present  
Future  
Padi- kkiREn 
Padi- ppEn 
Future-Neg 
Padi- 
kkamaattEn  
Padi- kkiRaai 
Padi- ppaai 
Padi- 
kkiRaan 
Padi- ppaan 
Padi-ththaaL  
Padi- kkiRaaL 
Padi- papal 
Padi- ththaar    Padi- kkiRaar 
Padi- ppaar 
Padi- ththathu  
Padi- kkiRathu 
Padi- kkum 
Padi- kkamataai 
Padi- 
kkamaattaan 
Padi- 
kkamaattaaL 
Padi- 
kkamaatdaar 
Padi- kkaathu 
I singular 
II singular 
singular 
III singular 
female 
singular 
singular 
I plural 
II plural 
III plural an 
Padi- tthOm  
Padi- 
kkiROm 
Padi- 
pPOm 
Padi- kkamaatTOm  
  
Padi-ththIrkaL 
 
Padi-ththaarkaL 
  
Padi- 
kkiRIrkaL 
Padi- 
ppIRkaL 
Padi- 
kkiRaarkaL 
Padi- 
ppaarKaL 
Padi-- 
kkamaattaarkaL 
Padi- 
kkamaattaarkaL 
III plural inan 
Padi-ththana 
Padi- 
kkinRana 
Padi- kkum 
Padi- kkaathu 
non-future negative padi-kkavillai all persons numbers and genders   
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 904Conjunctive 
Infinitive  
TABLE III NON-FINITE VERB 
Padi-thu     
Padi-kka  
Neg verbal participle 
Padi-kkaamal  
Conditional 
Padi-thaal 
Neg conditional 
Padi-kkaanittaal  
Negrelative participle 
Padi-kkaatha  
Neg verbal noun 
Deverbal nouns 
Padi-kkaathathu 
  
Padi-thal padi-ppu  padi-kkai  
IV STEMMERS FOR TAMIL LANGUAGE 
Stemming  is  the  process  of  extracting  root  word  from  the  given  text  Without  performing  complete 
morphological analysis it is also reduces the total number of distinct index entries Richness of morphology in 
Tamil language is major issue for creating right stemmer To address of this issue light stemmer is proposed 
and  performance  compared  to  rule  based  suffix  stripping  stemmer  The  detailed  description  of  two  stemmer 
approaches  for  Tamil  language  such  as  rule  based  suffix  removal  stemmer  and  light  stemmer  are  discussed 
following sequel  
A Rule based suffix stripping stemmer algorithm 
Rule based suffix stripping stemmer algorithm truncate suffix of Tamil inflectional word based on the 
rules  That  convert  inflectional  Tamil  word  into  stemmed  Tamil  word  36Rule  based  suffix  stripping 
stemmer Algorithm for Tamil Language is presented in Figure 2 
Rule based suffix stripping stemmer Algorithm for Tamil Language 
Input      List of Tamil words 
Output  StemmedRoot words 
Step1  Eliminate the entire complex plural  Eg      
                              
Step2  Eliminate the join word suffixes Eg     
                             
             A  Eliminate    
                   
             B  Eliminate  
                             
Step 3  According to the identified suffix the next possible suffix list is generated using rules
Figure 2 A Rule Based Suffix Stripping Algorithm for Tamil Language 
B Light Stemmer 
The  rule  based  suffix  stripping  stemmer  algorithm  give  infinite  verb  for  some  Tamil  words  Light 
stemmer  is  proposed  to  address  above  issue Light  stemmer  is  also kind  of rule based  stemmer  It  works by 
truncating all possible suffixes form and produce finite verb Light stemming is used to find the representative 
indexing  form  of  given  word  by  the  application  of  truncation  of  suffixes  10  The  core  objective  of  light 
stemmer is to preserve the word meaning intact and so increases the retrieval performance of an IR system A 
Light Stemmer Algorithm for Tamil Language is projected in Figure 3 
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 905Light stemmer Algorithm for Tamil Language 
Input      List of Tamil words 
Output  StemmedRoot words 
Step 1  Eliminate the entire complex plural   
Step 2  After the plural word is converted into singular word during the iteration the word is also checked for  
             adjective if it is found then its equivalent verb is substituted Example the term diya in  
             Odiya will be changed to du and the word is changed to Oodu 
Step 3  After the adjectives are converted to main word the tenses are eliminated such that Paadiya  
             Paadukinra and Paadum will be changed to Paadu 
Step 4  According to the identified suffix the next possible suffix list is generated 
Step 5  The Light algorithms are used for plural to singular conversion and for adjective and tense words to 
main verbs conversion 
Figure 3  A Light Stemmer Algorithm for Tamil Language 
 EXPERIMENTAL ANALYSIS 
The  goal  of  experimental  analysis  is  to  calculate  the  accuracy  of  the  proposed  stemmer  system  can 
achieve  Parameters  that  can  be  used  for  evaluating  Tamil  stemmer  algorithm  in  this  proposed  model  is 
stemmers comparison performance and correctness of the stems produced by it  The detailed description of 
dataset used for experiment and analysis of experiment results and their discussions are under here 
A Dataset 
Two test dataset are considered for evaluating the proposed algorithm The test dataset I has 700 words 
which  are  collected  from  Tamil  corpus  Central  Institute  of  Indian  Language  Test  dataset  2  contains  1600 
words constructed from the internet The stem for these words have been defined manually The training dataset 
consists of 3000 words taken from Tamil corpus Table IV summarizes the details of training and test datasets 
TABLE IV DATA SET GENERATION 
Data set 
Total Number of Words 
Training Dataset 
Test Dataset I 
Test Dataset II 
Total Number of Unique 
Minimum Length of the 
Maximum Length of the 
B The Experiment Results and Discussion 
The experiment analyzed over two datasets in order to evaluate the performance of proposed algorithm 
The accuracy is a parameter it is used to evaluate the efficiency of the proposed Tamil stemmer algorithm over 
a rule based suffix stripping stemmer The accuracy is defined in this proposed stemmer based on number of 
words stemmed correctly The Table V shows the computational results of a rule based suffix stripping and light 
stemmer based on suffix rule generation Table VI average result is generated from the Table V  From the Table 
VI  the  maximum  accuracy  of  rule  based  suffix  stripping  stemmer  is  8432  where  as  8673  maximum 
accuracy produced by light stemmer for the test dataset I light stemmer achieves accuracy 241 more than the 
rule based suffix stripping stemmer The accuracy of rule based suffix stripping stemmer in test dataset II is 
784  and  light  stemmer  accuracy  is  7983  In  the  dataset  II  143  more  accuracy  achieved  by  the  light 
stemmer it is more than the rule based suffix stripping stemmer accuracy 
Accuracy is calculated from the equation 1 It is based on the Number of Words Stemmed correctly 
given by the Tamil Stemmer algorithms and number of unique words in the given datasets 
Accuracy  Number of Correctly Stemmed words  Number of Unique words100          1 
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 906Dataset 
Dataset I 
Dataset II 
Number of Words 
Data Set 
Data Set I 
Data Set II 
Average 
TABLE V TEST DATA 
Number of Unique 
Number of Correctly 
Stemmed Word 
Accuracy 
Rule Based 
suffix Stripping 
algorithm 
Stemmer 
algorithm 
TABLE VI AVERAGE RESULTS 
Accuracy 
A Rule Based Suffix Stripping Stemmer 
A light Stemmer 
8432 
8136 
8673 
7983 
8328 
               The experiment is conducted over the dataset result of different accuracy ie A1A2 achieved by 
both  rule  based  suffix  stripping  and  light  stemmer  algorithm  with  required  statistical  parameters  and  their 
average result is shown in Table V The performance analysis chart is presented among various parameters in 
Figure 4 The computational results clearly explain that the light stemmer algorithm is performing better than 
the rule based suffix stripping algorithm 
SuffixStrippingAlgorithm
LightStemmerAlgorithm
A1 A2 A3 A4 A5 A6 A7 A8 A9 A10A11
Figure 4 Performance Analyses for Tamil Stemmer Algorithms 
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 907VI 
CONCLUSION 
Morphologically Tamil is a complex language since it has a number of variants in for a single word 
Tamil  language  is  rich  in  both  inflectional  and  derivational  morphologies  In  this  paper  a  light  stemmer  for 
Tamil text is proposed to handle inflectional morphology word This stemmer removes suffixes from a word to 
get stem word From the computational result it is prove   light stemmer approach is more suitable stemmer for 
Tamil language compare to a rule based suffix stripping stemmer  
REFERENCES 
1  ARamanathan and DRao A Lightweight Stemmer for Hindi   in proceedings of the 10th  Conference of the European Chapter of 
the  Association  for  Computational  LinguisticsEACL  on  Computational  linguistics  for  South  Asian  Language  Budapest  April 
workshop 2003    
Juhi  Ameta  Nisheeth  Joshi  and  Iti  Mathur  2011 A  Lightweight  Stemmer  for  Gujarati  46th  Annual  National  Convention  of 
Computer Society of India Organized by Computer Society of India Gujarat Chapter Sponsored by Computer Society of India and 
Department of Science and Technology Govt of Gujarat and IEEE Gujarat Section   
3  Punjabi Language Stemmer for nouns and proper names by Vishal Gupta Gurpreet Singh Lehal Proceedings of the 2nd Workshop 
on  South  and  Southeast  Asian  Natural  Language  Processing  WSSANLP  IJCNLP  2011    pages  3539Chiang  Mai  Thailand 
November 8 2011 
4  Khan  2007  A  light  weight  stemmer  for  Bengali  and  its  Use  in  spelling  Checker  Proc  1st  Intl  Conf  on  Digital  Comm  and 
Computer Applications DCCA07 Irbid Jordan March 19-23 
5  A Light Weight Stemmer for Urdu Language A Scarce Resourced Language Sajjad Ahmad Khan1 Waqas Anwar1 Usama Ijaz 
Bajwa1 Xuan Wang Proceedings of the 3rd Workshop on South and Southeast Asian Natural Language Processing SANLP pages 
6978COLING 2012 Mumbai December 2012 
6  Mudassar  M  Majgaonker  et  al  Discovering  suffixes  A  Case  Study  for  Marathi  Language  IJCSE  International  Journal  on 
Computer Science and Engineering Vol 02 No 08 2010 2716-2720  
7  Malayalam Stemmer - Computational Linguistic Research Group nlpau-kbcorgMalayalamStemmerFinalpdf  
8  Madhavi  Ganapathiraju  and  Levin  Lori  TelMore  Morphological  Generator  for  Telugu  Nouns  and  verbs  In  the  proceedings  of 
Second International Conference on Universal Digital Library Alexandria Egypt November 17-19 2006 
9  D Freitag Morphology induction from term clusters In Proceedings of the ninth conference on computational natural language 
learning CoNLL pp 128135 2005 
10  Imed Al-Sughaiyer Ibrahim Al-Kharashi 2004 Arabic morphological analysis techniques a comprehensive survey Journal of the 
American Society for Information Science and Technology 553189  213 
11  MF Porter 1980 An algorithm for suffix stripping Program 143130137 
12  Rajendran S Arulmozi S Ramesh Kumar Viswanathan S 2001 Computational morphology of verbal complex Paper read in 
Conference at Dravidan University Kuppam December 26-29 2001 
AUTHORS PROFILE 
MThangarasu received Master of Computer Application degree from Bharathiar University He purses MPhil 
under  supervision  of  DrRManavalan  His  area  of  interest  is  data  mining  and  Natural  Processing  Language 
NLP 
Dr  R  Manavalan  is  working  as  Assistant  professor  and  Head  in  Department  of  computer  science  and 
Applications He obtained PhD in Computer Science from Periyar University and published numerous research 
papers in international journals and also presented papers in various national and international conferences His 
area of interest is soft computing image processing and analysis Theory of computation 
MThangarasu et al International Journal of Computer Science  Engineering Technology IJCSETISSN  2229-3345Vol 4 No 07 Jul 2013 908